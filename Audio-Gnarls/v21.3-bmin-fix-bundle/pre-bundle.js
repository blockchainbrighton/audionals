(()=>{const e=new Set(["Tone","chains","audioSignatureTimer","sequenceIntervalId","audioContext","analyser","transport","node","input","output","_node","_input","_output","context","_context","_destination"]),n=JSON.stringify;function t(t,r,o){const i=new WeakSet;let a=0,c=0;const s=function(n,t){try{r&&(t=r.call(this,n,t))}catch(e){console.warn("[patch.stringify] user replacer threw",e)}if(t&&"object"==typeof t){if(i.has(t))return void(a++<10&&console.warn("[patch.stringify] skipping circular at key",n,t));if(i.add(t),e.has(n)||(e=>{try{return e&&"object"==typeof e&&("_context"in e||"_destination"in e||window.AudioNode&&e instanceof AudioNode||e.context&&e.context.audioWorklet)}catch{return!1}})(t))return void(c++<10&&console.warn("[patch.stringify] dropping audio-ish at key",n,t))}return t};try{const e=n(t,s,o);return(a||c)&&console.info(`[patch.stringify] OK (cycles:${a}, dropped:${c}, len:${e?.length??0})`),e}catch(e){console.error("[patch.stringify] hard failure",e);try{const e={};for(const n in t||{})e[n]=s(n,t[n]);return n(e,null,o)}catch(n){throw console.error("[patch.stringify] shallow fallback failed",n),e}}}Object.defineProperty(JSON,"stringify",{configurable:!0,writable:!0,value:t}),window.__safeStringify=t,console.log("[AudioGnarls prepatch] JSON.stringify patched"),window.addEventListener("error",(e=>console.error("[window.error]",e.message,e.error||e))),window.addEventListener("unhandledrejection",(e=>console.error("[unhandledrejection]",e.reason)))})();
