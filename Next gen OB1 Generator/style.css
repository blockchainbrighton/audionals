/* --- Global Variables --- */
:root {
    --control-bg: #2a2a2a;
    --control-border: #444;
    --button-bg: #333;
    --button-hover-bg: #555;
    --button-active-bg: #6a9a6a;
    --disabled-opacity: 0.5;
    --error-color: #ff6b6b;
}

/* --- Base Styles & Reset --- */
* {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    background-color: #000000;
    color: #e0e0e0;
    margin: 0;
    display: flex; /* For centering the page-wrapper */
    justify-content: center;
}

/* --- Main Layout (Grid for Wide Screens) --- */
.page-wrapper {
    display: grid;
    grid-template-columns: minmax(auto, 600px) 300px; /* App (max 600px) | Reference (300px) */
    gap: 20px;
    justify-content: center;
    padding: 20px;
    width: 100%;
    margin: 0 auto;
    align-items: start;
}

/* App container as a grid item */
.app-container {
    grid-column: 1; /* Place in first grid column */
    display: flex;  /* Use flexbox for internal content alignment */
    flex-direction: column;
    align-items: center; /* Center image, controls block, etc. */
    gap: 20px;
    width: 100%;
}

/* Reference Panel as a grid item */
.reference-panel {
    grid-column: 2; /* Place in second grid column */
    background-color: var(--control-bg);
    border: 1px solid var(--control-border);
    border-radius: 8px;
    padding: 15px 20px;
    color: #ccc;
    display: none; /* Initially hidden */
}
.reference-panel.show {
    display: block; /* Show when class is added */
}

/* --- Title Bar --- */
.title-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-bottom: 10px; /* Consistent with original .app-container h1 margin */
}

h1 {
    color: #f5f5f5;
    margin: 0 10px 0 0; /* Remove bottom margin, add right margin */
    flex-grow: 1;
    text-align: left;
    font-size: 1.5em; /* Example size, adjust as needed */
}

#info-toggle-btn {
    background-color: var(--button-bg);
    color: #e0e0e0;
    border: 1px solid var(--control-border);
    border-radius: 50%;
    width: 30px;
    height: 30px;
    font-size: 1.1em;
    line-height: 1;
    cursor: pointer;
    padding: 0;
    flex-shrink: 0;
    transition: background-color 0.2s ease;
}
#info-toggle-btn:hover {
    background-color: var(--button-hover-bg);
}

/* --- Reference Panel Content Styling --- */
.reference-panel h2 {
    margin-top: 0;
    margin-bottom: 15px;
    color: #f5f5f5;
    text-align: center;
    font-size: 1.2em;
}
.reference-panel h3 {
    margin-top: 15px;
    margin-bottom: 8px;
    color: #e0e0e0;
    border-bottom: 1px solid var(--control-border);
    padding-bottom: 4px;
    font-size: 1em;
}
.reference-panel ul {
    list-style: none;
    padding-left: 10px;
    margin: 0 0 15px 0;
}
.reference-panel li {
    margin-bottom: 6px;
    font-size: 0.9em;
}
.reference-panel code {
    background-color: #444;
    padding: 2px 5px;
    border-radius: 3px;
    font-family: monospace;
    font-size: 0.95em;
    color: #f0f0f0;
    border: 1px solid #555;
}
.reference-panel p em {
    font-size: 0.85em;
    color: #aaa;
    display: block;
    margin-bottom: 10px;
}
.reference-panel p:last-of-type em {
    margin-bottom: 5px;
}

/* --- Application Content Styling --- */
#main-image {
    max-width: 100%;
    max-height: 400px;
    height: auto;
    border: 2px solid var(--control-border);
    border-radius: 5px;
    cursor: pointer;
    object-fit: contain;
    transform: scale(1);
    transition: transform 0.15s ease-out;
    display: block; /* Prevents potential extra space below */
}
#main-image:active {
    transform: scale(0.98);
    transition-duration: 0.05s;
}
#main-image.playing {
    transform: scale(1.05);
}

.controls { /* The main controls block */
    background-color: var(--control-bg);
    border: 1px solid var(--control-border);
    border-radius: 8px;
    padding: 20px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.button-group {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 10px;
}

button {
    padding: 10px 15px;
    font-size: 1em;
    cursor: pointer;
    border: 1px solid var(--control-border);
    background-color: var(--button-bg);
    color: inherit; /* Inherit body text color */
    border-radius: 4px;
    transition: background-color 0.2s ease;
}
button:hover:not(:disabled) {
    background-color: var(--button-hover-bg);
}
button.active {
    background-color: var(--button-active-bg);
    font-weight: bold;
    color: #111; /* Dark text for contrast on active background */
}

.control-group {
    display: flex;
    align-items: center;
    gap: 10px;
}
.control-group label {
    flex-basis: 60px;
    text-align: right;
    font-size: 0.9em;
    flex-shrink: 0; /* Prevent label shrinking */
}
.control-group input[type="range"] {
    flex-grow: 1;
    cursor: pointer;
    accent-color: var(--button-active-bg); /* Slider thumb/track color */
}

.value-display {
    flex-basis: 75px;
    text-align: right;
    font-family: monospace;
    font-size: 0.95em;
    min-width: 75px;
    flex-shrink: 0; /* Prevent value shrinking */
}

/* --- State Styling --- */
.controls.disabled {
    opacity: var(--disabled-opacity);
    pointer-events: none; /* Prevent interaction with children */
}
/* Allow pointer events on container itself for potential error messages inside */
.controls.disabled {
   pointer-events: auto;
}
/* Explicitly disable elements within the disabled container */
.controls.disabled button,
.controls.disabled input,
.controls.disabled #main-image {
    cursor: not-allowed;
    pointer-events: none;
}

.error { /* Error message styling */
    color: var(--error-color);
    font-weight: bold;
    text-align: center;
    padding: 5px;
    border: 1px solid var(--error-color);
    background-color: #401a1a; /* Dark red background */
    border-radius: 4px;
    min-height: 1.5em;
    display: none; /* Hidden by default */
}
.error:not(:empty) {
    display: block; /* Show only when it has content */
}

/* --- Responsiveness --- */

/* Breakpoint for switching main layout from Grid to Flex (stacking) */
/* Approx 600px (app) + 300px (ref) + 20px (gap) + 40px (padding) = 960px */
@media (max-width: 960px) {
    .page-wrapper {
        display: flex;          /* Switch back to Flexbox */
        flex-direction: column; /* Stack vertically */
        align-items: center;    /* Center horizontally */
        grid-template-columns: none; /* Remove grid definition */
        max-width: 600px;       /* Limit width in single-column */
    }

    .app-container,
    .reference-panel {
        grid-column: auto;      /* Unset grid assignment */
        max-width: 100%;        /* Allow full width within parent */
    }

    .reference-panel {
        width: 100%;
        margin-top: 0; /* Rely on page-wrapper gap */
    }

    h1 {
        text-align: center; /* Center title on smaller screens */
    }
}

/* Breakpoint for stacking controls internally */
@media (max-width: 480px) {
    .control-group {
        flex-direction: column;
        align-items: stretch;
        gap: 5px;
    }
    .control-group label,
    .value-display {
        text-align: left;
        flex-basis: auto;
        width: 100%;
    }
    .value-display {
        text-align: center; /* Center value display when stacked */
    }

    .button-group {
        flex-direction: column;
        align-items: stretch;
    }

    h1 {
       font-size: 1.3em; /* Slightly smaller title on very small screens */
    }
}