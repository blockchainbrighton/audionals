/* --- Global Variables --- */
:root {
    --control-bg: #2a2a2a;
    --control-border: #444;
    --button-bg: #333;
    --button-hover-bg: #555;
    --button-active-bg: #6a9a6a;
    --disabled-opacity: 0.5;
    --error-color: #ff6b6b;
    --black-bg-for-hidden: #000000; /* Explicit black */
}

/* --- Base Styles & Reset --- */
* {
    box-sizing: border-box;
}

html {
    height: 100%;
}

body {
    font-family: sans-serif;
    background-color: #000000;
    color: #e0e0e0;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    overflow: hidden;
}

/* --- Main Layout (CSS GRID 3-Column) --- */
.main-layout {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    grid-template-rows: 100vh;
    align-items: center;
    width: 100%;
    height: 100vh;
    padding: 20px;
    gap: 20px;
    background-color: var(--black-bg-for-hidden); /* Black background behind gaps */
}

/* --- Column Default Styles (Common for side columns when VISIBLE) --- */
.controls-column,
.reference-column {
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Hide overflow by default */
    max-height: 100%;
    height: 100%;
    padding: 15px; /* Padding when visible */
    background-color: var(--control-bg); /* Default grey background */
    border: 1px solid var(--control-border); /* Default grey border */
    border-radius: 8px;
    min-width: 0;
    transition: visibility 0s linear 0.3s, /* Delay visibility change until fade ends */
                opacity 0.3s ease-in-out,
                background-color 0.3s ease-in-out,
                border-color 0.3s ease-in-out,
                padding 0.3s ease-in-out; /* Transition padding for smoother hide */
    opacity: 1;
    visibility: visible;
}

/* Style for the direct children *inside* the columns */
.controls-column > *,
.reference-column > * {
   transition: opacity 0.3s ease-in-out;
   opacity: 1; /* Children visible when column is visible */
   visibility: visible; /* Explicitly visible */

}


/* --- Column 2: Image Area (Grid Item - Center) --- */
.image-area {
    width: 80vh;
    height: 80vh;
    max-width: 100%;
    max-height: calc(100vh - 40px); /* Consider container padding */
    display: flex;
    justify-content: center;
    align-items: center;
    justify-self: center;
    align-self: center;
}

/* --- Image Styling (Inside Image Area) --- */
#main-image { /* (Keep as is) */
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
    border: 2px solid var(--control-border);
    border-radius: 5px;
    cursor: pointer;
    transform: scale(1);
    transition: transform 0.15s ease-out;
}
#main-image:active { /* (Keep as is) */
    transform: scale(0.98);
    transition-duration: 0.05s;
}
#main-image.playing { /* (Keep as is) */
    transform: scale(1.05);
}

/* --- Styling for HIDDEN Columns (Applies to BOTH) --- */
.controls-column.hidden,
.reference-column.hidden {
    opacity: 0; /* Fade out */
    visibility: hidden; /* Remove from accessibility, keep layout space */
    background-color: var(--black-bg-for-hidden); /* Black background */
    border-color: var(--black-bg-for-hidden);   /* Black border */
    padding: 0; /* Collapse padding */
    overflow: hidden; /* Ensure no overflow */
    transition-delay: 0s; /* Apply visibility change immediately when hiding */
     /* transition: visibility 0s linear 0s; Override transition */
}

/* Hide the direct children immediately when column is hidden */
/* THIS RULE NOW ALSO HIDES #reference-panel */
.controls-column.hidden > *,
.reference-column.hidden > * {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0s, visibility 0s; /* Make children disappear instantly when column starts hiding */
}

/* --- Reference Panel Styling (Content INSIDE Reference Column) --- */
.reference-panel {
    /* REMOVE display: none; */
    display: block; /* Or 'flex' if needed for internal layout */
    background-color: transparent;
    border: none;
    padding: 0;
    color: #ccc;
    width: 100%;
    flex-grow: 1; /* Allows it to fill space in the flex column */
    overflow-y: auto;
    /* Add transition matching the column's children */
    transition: opacity 0.3s ease-in-out;
    opacity: 1; /* Visible by default (when parent is visible) */
    visibility: visible; /* Visible by default (when parent is visible) */
}


/* --- Title Bar Styling (Inside Controls Column) --- */
/* (Keep as is) */
.title-bar { display: flex; justify-content: space-between; align-items: center; width: 100%; flex-shrink: 0; }
h1 { margin: 0; font-size: 1.5em; color: #eee; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
#info-toggle-btn { background: none; border: none; color: #aaa; font-size: 1.8em; cursor: pointer; padding: 0 5px; line-height: 1; }
#info-toggle-btn:hover { color: #fff; }

/* --- Controls Container Styling (Inside Controls Column) --- */
/* (Keep as is) */
.controls { background-color: transparent; border: none; padding: 0; width: 100%; display: flex; flex-direction: column; gap: 15px; flex-grow: 1; overflow-y: auto; }

/* --- Button, Control Group, Slider, Value Display Styling --- */
/* (Keep as is) */
.button-group { display: flex; gap: 10px; flex-wrap: wrap; }
button { background-color: var(--button-bg); border: 1px solid var(--control-border); color: #ddd; padding: 8px 15px; border-radius: 4px; cursor: pointer; transition: background-color 0.2s; }
button:hover:not(:disabled) { background-color: var(--button-hover-bg); }
button.active { background-color: var(--button-active-bg); font-weight: bold; }
.control-group { display: flex; align-items: center; gap: 10px; flex-wrap: wrap; }
.control-group label { flex-basis: 50px; flex-shrink: 0; text-align: right; font-size: 0.9em; color: #bbb; }
.control-group input[type="range"] { flex-grow: 1; cursor: pointer; accent-color: #6a9a6a; min-width: 100px; }
.value-display { font-size: 0.9em; color: #bbb; min-width: 60px; text-align: right; white-space: nowrap; }

/* --- State Styling --- */
/* (Keep as is) */
.controls.disabled { opacity: var(--disabled-opacity); pointer-events: none; }
.error { color: var(--error-color); font-weight: bold; margin-bottom: 10px; padding: 8px; background-color: rgba(255, 107, 107, 0.1); border: 1px solid var(--error-color); border-radius: 4px; }
.error:empty { display: none; }

/* --- Reference Panel Content Styling --- */
/* (Keep as is) */
.reference-panel h2 { margin-top: 0; color: #eee; border-bottom: 1px solid #555; padding-bottom: 5px; }
.reference-panel h3 { color: #ddd; margin-top: 15px; margin-bottom: 5px; }
.reference-panel ul { list-style: none; padding-left: 0; margin: 0; }
.reference-panel p, .reference-panel li { color: #ccc; line-height: 1.5; font-size: 0.9em; margin-bottom: 0.5em; }
.reference-panel code { background-color: #444; padding: 2px 5px; border-radius: 3px; font-family: monospace; color: #f0f0f0; }
.reference-panel p em { font-style: italic; color: #aaa; }
.reference-panel p:last-of-type em { display: block; margin-top: 15px; font-size: 0.85em; }

/* --- Responsiveness --- */
@media (max-width: 1024px) {
    body {
        overflow: auto;
        height: auto;
        min-height: 100vh;
    }

    .main-layout { /* Switch back to flex */
        display: flex;
        flex-direction: column;
        height: auto;
        width: 100%;
        max-width: 700px;
        margin: 20px auto;
        padding: 15px;
        gap: 15px;
        grid-template-columns: none;
        grid-template-rows: none;
    }

    .controls-column,
    .reference-column { /* Styles for stacked view */
        width: 100%;
        max-height: none;
        overflow-y: visible;
        height: auto;
        padding: 15px;
        border: 1px solid var(--control-border);
        background-color: var(--control-bg);
        min-width: initial;
        /* Reset visibility/opacity */
         visibility: visible;
         opacity: 1;
         transition: none; /* Disable transitions in stacked view */
    }

     /* Hidden rule for stacked view - Use display: none */
    .controls-column.hidden,
    .reference-column.hidden {
        display: none !important;
         /* Reset any lingering visibility styles */
         visibility: visible !important;
         opacity: 1 !important;
         height: auto !important; /* Ensure height isn't zero */
    }

     .image-area { /* (Keep as is for stacked) */
        width: 90%;
        max-width: 500px;
        height: auto;
        padding-bottom: 90%;
        position: relative;
        flex-shrink: 0;
        margin: 0 auto;
        justify-self: initial;
        align-self: initial;
    }

    #main-image { /* (Keep as is for stacked) */
        position: absolute;
        top: 0;
        left: 0;
    }

    .reference-panel {
        /* Ensure it's visible in stacked mode when column is */
        display: block; /* Or flex */
        height: auto;
        padding: 0;
        opacity: 1;
        visibility: visible;
   }

     .reference-panel p, .reference-panel li, .reference-panel code { /* (Keep as is) */
         color: #e0e0e0;
     }
}

@media (max-width: 480px) { /* (Keep as is) */
     body { overflow-x: hidden; }
     .main-layout { padding: 10px; gap: 10px; max-width: 100%; margin: 10px auto; }
     h1 { font-size: 1.2em; }
     .control-group { flex-direction: column; align-items: stretch; gap: 5px; }
     .control-group label { text-align: left; flex-basis: auto; width: 100%; margin-bottom: 3px; }
     .value-display { text-align: right; width: 100%; margin-top: 3px; }
     .button-group { flex-direction: column; align-items: stretch; }
     button { padding: 10px 15px; }
     .image-area { width: 95%; padding-bottom: 95%; }
}