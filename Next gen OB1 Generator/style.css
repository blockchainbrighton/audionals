:root {
    /* Dark Theme Variables */
    --control-bg: #2a2a2a;        /* Dark grey for control background */
    --control-border: #444;       /* Medium grey for borders */
    --button-bg: #333;            /* Dark grey for buttons */
    --button-hover-bg: #555;      /* Lighter grey for button hover */
    --button-active-bg: #6a9a6a;  /* Muted green for active state */
    --disabled-opacity: 0.5;
    --error-color: #ff6b6b;       /* Brighter red for errors on dark background */

}

* {
    box-sizing: border-box;
}

/* --- Layout for App and Reference Panel --- */
.page-wrapper {
    display: flex;              /* Arrange children (app, reference) in a row */
    justify-content: center;    /* Center items if they don't fill the width */
    gap: 20px;                  /* Space between app and reference panel */
    padding: 20px;              /* Padding around the entire content area */
    width: 100%;                /* Use full available width */
    max-width: 1000px;          /* Limit max width to keep things tidy */
    margin: 0 auto;             /* Center the wrapper itself on the page */
    align-items: flex-start;    /* Align items to the top */
}

/* Adjust app container if needed (ensure it doesn't grow too wide) */
.app-container {
    max-width: 600px;           /* Keep original max-width */
    flex-shrink: 0;             /* Prevent app container from shrinking */
}

/* --- Title Bar Layout --- */
.title-bar {
    display: flex;
    justify-content: space-between; /* Pushes title left, button right */
    align-items: center;
    width: 100%;
    margin-bottom: 10px; /* Space below title bar */
}

h1 {                            /* Adjust h1 within the flex title bar */
    margin-bottom: 0;           /* Remove default margin */
    margin-right: 10px;         /* Space between title and button */
    flex-grow: 1;               /* Allow title to take space */
    text-align: left;           /* Align title left */
}

/* --- Info Button Styling --- */
#info-toggle-btn {
    background-color: var(--button-bg);
    color: #e0e0e0;
    border: 1px solid var(--control-border);
    border-radius: 50%;         /* Make it round */
    width: 30px;                /* Fixed size */
    height: 30px;               /* Fixed size */
    font-size: 1.1em;
    line-height: 1;             /* Center icon vertically */
    cursor: pointer;
    padding: 0;
    flex-shrink: 0;             /* Prevent button from shrinking */
    transition: background-color 0.2s ease;
}

#info-toggle-btn:hover {
    background-color: var(--button-hover-bg);
}

/* --- Reference Panel Styling --- */
.reference-panel {
    background-color: var(--control-bg); /* Use theme variable */
    border: 1px solid var(--control-border);/* Use theme variable */
    border-radius: 8px;
    padding: 15px 20px;
    color: #ccc;                 /* Light grey text */
    width: 300px;               /* Set a fixed or max-width */
    flex-shrink: 0;             /* Prevent shrinking */
    display: none;              /* <<< Initially hidden */
}

/* --- Rule to SHOW the panel when class is added --- */
.reference-panel.show {
    display: block;             /* <<< Make it visible */
}

/* --- Styling for Content INSIDE the Reference Panel --- */
/* (These style the HTML injected by referenceDisplay.js) */
.reference-panel h2 {
    margin-top: 0;
    margin-bottom: 15px;
    color: #f5f5f5;
    text-align: center;
    font-size: 1.2em;
}

.reference-panel h3 {
    margin-top: 15px;
    margin-bottom: 8px;
    color: #e0e0e0;
    border-bottom: 1px solid var(--control-border);
    padding-bottom: 4px;
    font-size: 1em;
}

.reference-panel ul {
    list-style: none;
    padding-left: 10px;
    margin-top: 0;
    margin-bottom: 15px;
}

.reference-panel li {
    margin-bottom: 6px;
    font-size: 0.9em;
}

.reference-panel code {
    background-color: #444;
    padding: 2px 5px;
    border-radius: 3px;
    font-family: monospace;
    font-size: 0.95em;
    color: #f0f0f0;
    border: 1px solid #555;
}

.reference-panel p em {
    font-size: 0.85em;
    color: #aaa;
    display: block;
    margin-bottom: 10px;
}
.reference-panel p:last-of-type em { /* Adjust spacing for last note */
    margin-bottom: 5px;
}


/* --- Responsiveness for the Two-Column Layout --- */
/* Adjust breakpoint (e.g., 900px) as needed */
@media (max-width: 900px) {
    .page-wrapper {
        flex-direction: column; /* Stack app and reference vertically */
        align-items: center;    /* Center items when stacked */
        max-width: 600px;       /* Adjust max-width for single column */
    }

    .reference-panel {
        width: 100%;            /* Take full width when stacked */
        max-width: 600px;       /* Match app container max-width */
        margin-top: 20px;       /* Add space when stacked below */
    }

    .app-container {
        max-width: 100%;        /* Allow app container to use full width */
    }

     .title-bar {
        /* Optional: Adjust title bar layout on small screens */
        /* flex-wrap: wrap; */ /* Example: Allow button to wrap */
    }
     h1 {
         /* Optional: Center title on smaller screens */
         /* text-align: center; */
         /* width: 100%; */
         /* margin-bottom: 10px; */
         /* margin-right: 0; */
    }
     #info-toggle-btn {
         /* Optional: Reposition button on small screens */
         /* margin: 5px auto 0; */ /* Example: Center below title */
    }
}

/* --- Ensure body padding doesn't interfere --- */
/* (Keep your body styles, but padding is handled by page-wrapper now) */
body {
    font-family: sans-serif;
    background-color: #000000;
    color: #e0e0e0;
    margin: 0;
    /* padding: 20px; */ /* Padding moved to .page-wrapper */
    display: flex;
    justify-content: center;
}

/* --- Keep ALL your other existing CSS rules below --- */
/* ... */
/* .controls { ... } */
/* button { ... } */
/* etc. */
/* ... */

.app-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    max-width: 600px;
    width: 100%;
}

h1 {
    text-align: center;
    margin-bottom: 10px;
    color: #f5f5f5; /* Changed to light grey/off-white */
}

#main-image {
    max-width: 100%;
    max-height: 400px; /* Limit image height */
    height: auto; /* Maintain aspect ratio */
    border: 2px solid var(--control-border); /* Uses updated variable */
    border-radius: 5px;
    cursor: pointer;
    object-fit: contain; /* Ensure image fits within bounds */
    /* --- Core Animation Setup --- */
    transform: scale(1);
    transition: transform 0.15s ease-out; /* Adjust timing as needed */
}
#main-image:active {
    transform: scale(0.98);
    transition-duration: 0.05s; /* Faster transition for click feedback */
}
/* --- Style for when the 'playing' class is added by JavaScript --- */
#main-image.playing {
    transform: scale(1.05); /* Make it slightly larger */
}


.controls {
    background-color: var(--control-bg); /* Uses updated variable */
    border: 1px solid var(--control-border); /* Uses updated variable */
    border-radius: 8px;
    padding: 20px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.button-group {
    display: flex;
    justify-content: space-around; /* Space out buttons */
    flex-wrap: wrap; /* Allow buttons to wrap on small screens */
    gap: 10px;
    margin-bottom: 10px;
}

button {
    padding: 10px 15px;
    font-size: 1em;
    cursor: pointer;
    border: 1px solid var(--control-border); /* Uses updated variable */
    background-color: var(--button-bg); /* Uses updated variable */
    color: inherit; /* Inherit light text color from body */
    border-radius: 4px;
    transition: background-color 0.2s ease;
}

button:hover:not(:disabled) {
    background-color: var(--button-hover-bg); /* Uses updated variable */
}

button.active {
    background-color: var(--button-active-bg); /* Uses updated variable */
    font-weight: bold;
    color: #111; /* Dark text for better contrast on the active green */
}

.control-group {
    display: flex;
    align-items: center;
    gap: 10px;
}

.control-group label {
    flex-basis: 60px; /* Fixed width for labels */
    text-align: right;
    font-size: 0.9em;
    /* Text color inherited from body */
}

.control-group input[type="range"] {
    flex-grow: 1; /* Slider takes remaining space */
    cursor: pointer;
    /* Basic styling for range input in dark mode - might need vendor prefixes for full styling */
    accent-color: var(--button-active-bg); /* Changes the slider thumb/track color */
}

.value-display {
    flex-basis: 75px; /* Fixed width for value display */
    text-align: right;
    font-family: monospace;
    font-size: 0.95em;
    min-width: 75px; /* Ensure it doesn't shrink too much */
    /* Text color inherited from body */
}

/* Disabled State */
.controls.disabled {
    opacity: var(--disabled-opacity);
    pointer-events: none; /* Prevent interaction with children */
}
/* Override pointer-events for the container itself if needed */
.controls.disabled {
   pointer-events: auto; /* Allow error message display? */
}

/* Explicitly disable elements within the disabled container */
.controls.disabled button,
.controls.disabled input,
.controls.disabled #main-image /* Style image too if needed */
{
    cursor: not-allowed;
    pointer-events: none; /* Ensure no clicks go through */
}

/* Error Message Styling */
.error {
    color: var(--error-color); /* Uses updated variable (brighter red) */
    font-weight: bold;
    text-align: center;
    padding: 5px;
    border: 1px solid var(--error-color); /* Uses updated variable */
    background-color: #401a1a; /* Dark red background */
    border-radius: 4px;
    min-height: 1.5em; /* Ensure space is reserved */
    display: none; /* Hidden by default */
}
.error:not(:empty) {
    display: block; /* Show only when it has content */
}

/* Basic Responsiveness */
@media (max-width: 480px) {
    .control-group {
        flex-direction: column;
        align-items: stretch; /* Stack label, slider, value */
        gap: 5px;
    }
    .control-group label,
    .value-display {
        text-align: left;
        flex-basis: auto; /* Reset fixed basis */
        width: 100%;
    }
    .value-display {
        text-align: center;
    }
    .button-group {
        flex-direction: column; /* Stack buttons vertically */
        align-items: stretch;
    }
}

/* #main-image animation styles remain the same */