// pfpCapture.js
function getAssignments(){const e=[];for(let t=TOTAL_CHANNELS;t>=1;t--){const{arrayIndex:n,cci2:o}=renderingState[t]||{};void 0!==n&&void 0!==o&&e.push(`Channel ${TOTAL_CHANNELS-t+1}: ArrayIndex=${n}, CCI2=${o}`)}return console.log("Assignments gathered:",e),e}let playbackStarted=!1;const psTimeEvent=e=>{playbackStarted=e,console.log(`Playback ${e?"started":"stopped"}.`),console.log("Playback state:",playbackStarted)};document.addEventListener("playbackStarted",(()=>{window.psTime=Date.now(),psTimeEvent(!0)})),document.addEventListener("playbackStopped",(()=>psTimeEvent(!1)));function captureCanvas(e){const t=document.querySelectorAll("canvas")[1];if(!t)return console.error("No canvas element found.");console.log("Canvas selected with dimensions:",t.width,t.height);const n=document.createElement("canvas");Object.assign(n,{width:t.width,height:t.height}),n.getContext("2d").drawImage(t,0,0,n.width,n.height),console.log("Image drawn on finalCanvas with dimensions:",n.width,n.height),e(n,window.psTime?Date.now()-window.psTime:0)}function processAndDownloadCanvas(e,t){const n={accessLevel:AccessLevel,seed:window.seed,assignments:getAssignments(),timecode:t};console.log("Metadata collected:",n);const o=`\nSeed: ${n.seed}\nAccess Level: ${n.accessLevel}\nChannel Effect Assignments: \n${n.assignments.join("\n")}\nTimecode: ${n.timecode} ms\n    `.trim(),a=e.getContext("2d");Object.assign(a,{font:"14px Arial",fillStyle:"#1b1b1b",shadowColor:"black",textAlign:"right"}),o.split("\n").reverse().forEach(((t,n)=>{a.fillText(t,e.width-10,e.height-10-16.8*n)})),console.log("Text drawn on finalCanvas"),e.toBlob((e=>{const t=document.createElement("a");Object.assign(t,{href:URL.createObjectURL(e),download:`visual_state_${(new Date).toISOString()}.jpeg`}),t.click(),console.log("Download link clicked")}),"image/jpeg")}let lastCapture=0;document.addEventListener("keydown",(e=>{console.log("Keydown event detected:",e.key);const t=Date.now();"p"===e.key.toLowerCase()&&(console.log("The isTrippy value:",isTrippy),console.log("Playback state at keydown:",playbackStarted),isTrippy&&playbackStarted&&t-lastCapture>=3e4?(lastCapture=t,captureCanvas(processAndDownloadCanvas)):console.log("Capture attempt blocked: Either too soon since the last capture or invalid conditions."))}));
