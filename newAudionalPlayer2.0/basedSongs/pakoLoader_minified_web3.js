// pakoLoader_minified.js

const keyMap={0:"projectName",1:"artistName",2:"projectBPM",3:"currentSequence",4:"channelURLs",5:"channelVolume",6:"channelPlaybackSpeed",7:"trimSettings",8:"projectChannelNames",9:"startSliderValue",10:"endSliderValue",11:"totalSampleDuration",12:"start",13:"end",14:"projectSequences",15:"steps"},reverseKeyMap=Object.fromEntries(Object.entries(keyMap).map((([e,r])=>[r,+e]))),channelMap=Array.from({length:26},((e,r)=>String.fromCharCode(65+r))),reverseChannelMap=Object.fromEntries(channelMap.map(((e,r)=>[e,r]))),decompressSteps=e=>e.flatMap((e=>{if("number"==typeof e)return e;if("object"==typeof e&&"r"in e){const[r,t]=e.r;return Array.from({length:t-r+1},((e,t)=>r+t))}return"string"==typeof e&&e.endsWith("r")?{index:parseInt(e.slice(0,-1),10),reverse:!0}:void 0})),deserialize=e=>{const r=e=>Array.isArray(e)?e.map((e=>"object"==typeof e?r(e):e)):"object"==typeof e&&null!==e?Object.entries(e).reduce(((e,[t,n])=>{const a=keyMap[t]??t;return e[a]="projectSequences"===a?Object.entries(n).reduce(((e,[r,t])=>(e[r.replace("s","Sequence")]=Object.entries(t).reduce(((e,[r,t])=>{var n;return e[`ch${reverseChannelMap[r]}`]={steps:(n=t[reverseKeyMap.steps]||[],n.flatMap((e=>{if("number"==typeof e)return e;if("object"==typeof e&&"r"in e){const[r,t]=e.r;return Array.from({length:t-r+1},((e,t)=>r+t))}return"string"==typeof e&&e.endsWith("r")?{index:parseInt(e.slice(0,-1),10),reverse:!0}:void 0})))},e}),{}),e)),{}):r(n),e}),{}):e;return r(e)};
const loadPako=async()=>{try{const t=await fetch("/content/2109694f44c973892fb8152cf5c68607fb19288c045af1abc1716c1c3b4d69e6i0"),o=await t.text(),e=document.createElement("div");e.innerHTML=o;const n=e.querySelectorAll("script"),c=Array.from(n).find((t=>t.textContent.includes("pako")));if(!c)throw new Error("Pako library not found in the HTML content.");const r=document.createElement("script");r.textContent=c.textContent,document.head.appendChild(r),console.log("Pako library loaded:",pako)}catch(t){console.error("Error loading Pako:",t)}};
const processSerializedData=async e=>{try{await loadPako();const o=await fetch(e);if(!o.ok)throw new Error("Network response was not ok");const a=await o.arrayBuffer(),r=pako.inflate(new Uint8Array(a)),t=new TextDecoder("utf-8").decode(r),n=JSON.parse(t),s=deserialize(n);console.log("Deserialized Data:",s);const c=new Blob([JSON.stringify(s)],{type:"application/json"});window.jsonDataUrl=URL.createObjectURL(c);const i=document.createElement("script");i.src="/content/6e226872d6612da632fcf29824b6f52c3672a745e194032e4f91c351e47d75c9i0",document.head.appendChild(i)}catch(e){console.error("Error processing data:",e)}};