// visualiserHelperFunctions.js

const selectArrayIndex=(a,e,t)=>{const n=randomWithSeed(a+100*t),i=accessLevelMappings[e];return i[Math.floor(n*i.length)]},handlePlaybackStateChange=()=>{isPlaybackActive?clearCanvas=!isTrippy:clearCanvas=!0,immediateVisualUpdate()},handleAudioPlaybackEvent=a=>{const{action:e}=a.detail;"activeStep"===e?isPlaybackActive=!0:"stop"===e&&(isPlaybackActive=!1),handlePlaybackStateChange()};document.addEventListener("internalAudioPlayback",handleAudioPlaybackEvent);const onPlaybackStart=()=>{isPlaybackActive=!0,handlePlaybackStateChange()},onPlaybackStop=()=>{isPlaybackActive=!1,handlePlaybackStateChange()},updateVisualizer=(a,e,t)=>{console.log(`Updating visual:\nAccessLevel=${AccessLevel}\nArrayIndex=${e}\nCCI2=${a}`),immediateVisualUpdate()},shouldUpdateVisualizer=(a,e,t)=>{const n=renderingState[a]||{},i=n.arrayIndex!==e||n.cci2!==t;return i&&(renderingState[a]={arrayIndex:e,cci2:t}),i};let needImmediateUpdate=!1;const immediateVisualUpdate=()=>{needImmediateUpdate&&(needImmediateUpdate=!1)};