// initVisualiser.js

console.log("Initialization.js loaded");let isTrippy=!1,isPlaybackActive=!1,playbackLoopCount=0,hasLoggedFirstLoop=!1,clearCanvas=!0,AccessLevel=null;const randomWithSeed=e=>{const t=1e4*Math.sin(e);return t-Math.floor(t)},calculateCCI2=(e,t)=>{if(!t||t<=0)return console.error("Invalid array length:",t),1;const o=100*randomWithSeed(seed+(e+1)),r=Math.floor(o/100*t);return Math.min(Math.max(r,0),t-1)},generateAccessLevel=e=>{const t=Math.pow(randomWithSeed(e),.3);return Math.min(Math.max(Math.floor(10*(1-t))+1,1),10)};AccessLevel=generateAccessLevel(seed),console.log(`AccessLevel=${AccessLevel}`),9!==AccessLevel&&10!==AccessLevel||(isTrippy=!0,console.log("Trippy mode activated!"));let renderingState={},activeArrayIndex={};const arrayLengths=(()=>{const e={};return[getColors0Length,getColors1Length,getColors2Length,getColors3Length,getColors4Length,getColors5Length,getColors6Length,getColors7Length].forEach(((t,o)=>{const r=o+1;try{e[r]=t()||0}catch(e){console.error(`Failed to get length for array ${r}:`,e)}})),console.log("Initialized array lengths:",e),e})(),accessLevelMappings={1:[1],2:[1,2],3:[1,2,3],4:[2],5:[5],6:[1,2,5],7:[1,2,3,4,5,6],8:[1,4,6],9:[4,5,6],10:[6,7]};