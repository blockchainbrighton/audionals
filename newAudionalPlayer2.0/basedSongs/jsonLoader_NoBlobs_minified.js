// jsonLoader_NoBlobs.js
let globalVolumeMultiplier=1,globalJsonData=null,bpm=0,isReversePlay=!1,isToggleInProgress=!1,isReadyToPlay=!1;const sourceChannelMap=new Map,globalTrimTimes={},globalVolumeLevels={},globalPlaybackSpeeds={},activeSources=[],globalGainNodes=new Map,globalAudioBuffers=[],globalReversedAudioBuffers={},gainNodes={},audioCtx=window.AudioContextManager.getAudioContext(),AudionalPlayerMessages=new BroadcastChannel("channel_playback");let audioWorker,preprocessedSequences={},currentStep=0,beatCount=0,barCount=0,currentSequence=0,isPlaying=!1,playbackTimeoutId=null,nextNoteTime=0,totalSequences=0;async function loadJsonFromLocalStorage(){try{const e=localStorage.getItem("jsonData");if(!e)throw new Error("No data found in localStorage");globalJsonData=JSON.parse(e),console.log("[debug] Loaded JSON data:",globalJsonData);const n={channelsWithUrls:0,sequencesCount:0,activeStepsPerSequence:{},activeChannelsPerSequence:{},types:{}};analyzeJsonStructure(globalJsonData,n);const t=prepareForPlayback(globalJsonData,n);console.log("[debug] Prepared data for playback:",t),await fetchAndProcessAudioData(t.channelURLs),preprocessAndSchedulePlayback(t),console.log("[debug] Preprocessed sequences:",preprocessedSequences)}catch(e){console.error("Could not load JSON data from local storage:",e)}}function analyzeJsonStructure(e,n){if(e.projectSequences&&"object"==typeof e.projectSequences)for(const[t,s]of Object.entries(e.projectSequences)){n.activeStepsPerSequence[t]=0,n.activeChannelsPerSequence[t]=[];for(const[e,o]of Object.entries(s)){const s=`Channel ${parseInt(e.slice(2))+1}`;n.activeStepsPerSequence[t]+=o.steps.length,n.activeChannelsPerSequence[t].push(s)}}for(const[t,s]of Object.entries(e))if("projectSequences"!==t){const e=Array.isArray(s)?"array":typeof s;n.types[e]=(n.types[e]||0)+1,"object"!==e&&"array"!==e||analyzeJsonStructure(s,n)}}function findAndSetEndSequence(e){if(e&&e.sequences){let n=null,t=!1;for(const s of Object.values(e.sequences)){const o=Object.values(s.normalSteps).every((e=>0===e.length));if(o&&n){e.endSequence=n,t=!0,console.log("End sequence set to:",n);break}o||(n=s)}!t&&n&&(e.endSequence=n,console.log("End sequence set to the last non-empty sequence:",n))}}function prepareForPlayback(e,n){const{channelURLs:t,trimSettings:s,channelVolume:o,channelPlaybackSpeed:a,projectSequences:r,projectName:c,projectBPM:l,currentSequence:u}=e;bpm=l,totalSequences=u,t.forEach(((e,n)=>{const t=n+1,r=s[n]||{};globalTrimTimes[`Channel ${t}`]={startTrim:(r.startSliderValue||0)/100,endTrim:(r.endSliderValue||100)/100},globalVolumeLevels[`Channel ${t}`]=(o[n]||1).toFixed(3),globalPlaybackSpeeds[`Channel ${t}`]=Math.max(.1,Math.min(a[n],100)).toFixed(3)}));const i=Object.fromEntries(Object.entries(r).map((([e,n])=>{const t={},s={};return Object.entries(n).forEach((([e,n])=>{const o=`Channel ${parseInt(e.slice(2))+1}`;t[o]=[],s[o]=[],n.steps.forEach((e=>{const n="object"==typeof e?e.index:e;(e.reverse?s:t)[o].push(n)}))})),[e,{normalSteps:t,reverseSteps:s}]}))),p={projectName:c,bpm:l,channels:t.length,channelURLs:t,trimTimes:globalTrimTimes,stats:n,sequences:i};return findAndSetEndSequence(p),p}function preprocessAndSchedulePlayback(e){if(!e||!e.sequences)return console.error("Playback data is not available or empty.");bpm=e.bpm,preprocessedSequences=Object.fromEntries(Object.entries(e.sequences).map((([e,n])=>[e,{normalSteps:processSteps(n.normalSteps),reverseSteps:processSteps(n.reverseSteps)}]))),isReadyToPlay=Object.values(preprocessedSequences).some((e=>Object.keys(e.normalSteps).length>0||Object.keys(e.reverseSteps).length>0))}function processSteps(e){return Object.fromEntries(Object.entries(e).filter((([,e])=>e.length)).map((([e,n])=>[e,n.map((e=>({step:e,timing:(e*(60/bpm)).toFixed(3)})))])))}