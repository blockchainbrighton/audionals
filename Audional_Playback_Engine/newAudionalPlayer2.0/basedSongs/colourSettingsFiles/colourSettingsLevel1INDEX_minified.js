// colourSettingsLevel1 
console.log("Colour settings level 1 loaded");const hexCache={},colorNameCache={},hslCache={},rgbCache={};function initializeHexCache(o){for(const t in o)for(const e of o[t])hexCache[e.index]=e.hex}function getHexFromIndex(o,t){const e=hexCache[o];if(e)return e;throw new Error(`Color with index ${o} not found in provided palette.`)}function getConditionalColorWithIndex(o,t,e,l,n,r){const a=getHexFromIndex(l,r),i=getHexFromIndex(n,r);return(Math.floor(o/e)+Math.floor(t/e))%111==0?a:i}function getRandomColor(o){const t=o.flat();return t[Math.floor(Math.random()*t.length)]}function getColorFromPalette(o,t){return hexToRgb(t[o%t.length].hex)}function getHslColor(o,t){const e=`${o}-${t}`;if(hslCache[e])return hslCache[e];const l=`hsl(${o%t*360}, 100%, 50%)`;return hslCache[e]=l,l}function hexToRgb(o){3===(o=o.replace("#","")).length&&(o=o.split("").map((o=>o+o)).join(""));const t=parseInt(o,16);return{r:t>>16&255,g:t>>8&255,b:255&t}}function getDynamicRgbWithIndex(o,t,e,l,n,r){const a=getHexFromIndex(n,r),{r:i,g:c,b:d}=hexToRgb(a),g=Math.sqrt(Math.pow(o-e,2)+Math.pow(t-l,2))/50;return`rgba(${i}, ${c}, ${d}, ${Math.min(g,1)})`}initializeHexCache(colorPalette);const fallbackColors=["#FF0000","#00FF00","#0000FF","#FFFF00","#FF00FF","#00FFFF"],modulatorNumbers=[1,10,100,250,500,1e3,2e3,3e3,4e3,5e3,1e4,25e3,5e4],initializeSelections=function(){let o=null;return function(){if(null===o){const t=BigInt(window.seed);if("bigint"!=typeof t||t<0n)throw new Error("[Seed] Seed must be a valid positive BigInt.");const e=Number(t%BigInt(fallbackColors.length)),l=Number(t%BigInt(modulatorNumbers.length)),n=fallbackColors[e],r=modulatorNumbers[l];console.log(`[Seed] Seed value: ${t}`),console.log(`[Seed] Calculated fallback index: ${e}`),console.log(`[Seed] Selected fallback color using seed: ${n}`),console.log(`[Seed] Calculated modulator index: ${l}`),console.log(`[Seed] Selected modulator value: ${r}`),o={fallbackColor:n,modulator:r}}return o}}();function getFallbackColor(){return initializeSelections().fallbackColor}function getModulatorByIndex(){return initializeSelections().modulator}function getColorSettings(o){const t={peach:{rFactor:1,gFactor:2,bFactor:3},blue:{rFactor:.5,gFactor:.8,bFactor:1.5},default:{rFactor:.5,gFactor:.8,bFactor:1.5}};return t[o]||t.default}const fallbackColor=getFallbackColor(),modulator=getModulatorByIndex();function dynamicRgb(o,t,e,l){const{rFactor:n,gFactor:r,bFactor:a}=getColorSettings(l),i=Math.floor(o*((t+255)/(e*n)*255))%256,c=Math.floor(o*((t+255)/(e*r)*255))%256,d=Math.floor(o*((t+255)/(e*a)*255))%256,g=getFallbackColor();return i>.01||c>.01||d>.01?`rgb(${i}, ${c}, ${d})`:g}function getDynamicRgb(o,t,e,l,n,r,a){return`rgba(${n}, ${r}, ${a}, ${Math.sqrt(Math.pow(o-e,2)+Math.pow(t-l,2))/50})`}function getConditionalColor(o,t,e,l,n){return((o/e|0)+(t/e|0))%111==0?l:n}console.log(`[Seed] Final fallback color: ${fallbackColor}`),console.log(`[Seed] Final modulator value: ${modulator}`);{const o=100;function getColors1(t,e,l){const{x:n,y:r,z:a}=l[0],{x:i,y:c}=l[1],{x:d,y:g}=l[2],h=(l[1].z,l[2].z+o),C=Array.from({length:24},(()=>Math.random())),f=Date.now();Math.sin(f),Array.from({length:23},((o,t)=>t+1));return[C[0]*((h+255)/(11*o)*255)>.01?`rgb(${Math.floor(C[0]*((h+255)/(11*o)*255))}, ${Math.floor(C[0]*((h+255)/(11*o)*255))}, ${Math.floor(C[0]*((h+255)/(11*o)*255))})`:"#FF0000",...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(n,r,3,[1,2,3,4,5][t],1,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(i,c,3,[11,12,13,14,15,16,17,18,19,20][t],1,window.colorPalette))),...[10,1.77].flatMap((o=>Array.from({length:5},((t,e)=>getConditionalColorWithIndex(l[0].x,l[0].y,o,[1,2,3,4,5,6,7,8,9,10][e],1,window.colorPalette))))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,3,[11,12,13,14,15,16,17,18,19,20][t],1,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,3,[1,2,3,4,5][t],24,window.colorPalette))),...Array.from({length:10},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,5,[11,12,13,14,15,16,17,18,19,20][t],1,window.colorPalette))),...Array.from({length:10},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,10,[1,2,3,4,5,6,7,8,9,10][t],1,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],24,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],25,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],26,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],27,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],28,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],29,window.colorPalette))),...Array.from({length:5},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,11,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30][t],30,window.colorPalette))),...Array.from({length:10},((o,t)=>getConditionalColorWithIndex(l[1].x,l[1].y,10,[1,2,3,4,5,6,7,8,9,10][t],1,window.colorPalette))),...Array.from({length:10},((o,t)=>getConditionalColorWithIndex(l[0].x,l[1].y,10,[11,12,13,14,15,16,17,18,19,20][t],1,window.colorPalette))),...Array.from({length:10},((o,t)=>getConditionalColorWithIndex(l[1].x,l[0].y,10,[1,2,3,4,5,6,7,8,9,10][t],1,window.colorPalette)))]}function getColors1Length(){const o=getColors1(null,null,[{z:0,x:0,y:0},{z:0,x:0,y:0},{z:0,x:0,y:0}]).length;return console.log(`getColors1 length: ${o}`),o}getColors1Length()}