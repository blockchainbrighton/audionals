function playBuffer(e,{startTrim:t,endTrim:a},i,n){t=Math.max(0,Math.min(t,1)),a=Math.max(t,Math.min(a,1));const u=t*e.duration,o=(a-t)*e.duration,r=audioCtx.createBufferSource();r.buffer=e;const c=globalPlaybackSpeeds[i]||1;r.playbackRate.value=c;const l=audioCtx.createGain(),s=parseVolumeLevel(globalVolumeLevels[i]||defaultVolume)*globalVolumeMultiplier,d=audioCtx.currentTime;l.gain.cancelScheduledValues(d),l.gain.setValueAtTime(0,d),l.gain.linearRampToValueAtTime(s,d+fadeDuration),r.connect(l),l.connect(audioCtx.destination),r.start(n,u,o/c),activeSources[i]||(activeSources[i]=[]),activeSources[i].push({source:r,gainNode:l}),r.onended=()=>{activeSources[i]=activeSources[i].filter((e=>e.source!==r))}}function calculateReversedTrimTimes(e){return{startTrim:1-e.endTrim,endTrim:1-e.startTrim}}function parseVolumeLevel(e){const t="number"==typeof e?e:parseFloat(e);return clampVolume(isNaN(t)?defaultVolume:t)}function clampVolume(e){return Math.max(0,Math.min(e,3))}async function resumeAudioContext(){await window.AudioContextManager.resume()}async function ensureAudioContextState(){await resumeAudioContext(),console.log("AudioContext state:",audioCtx.state)}function resetPlaybackState(){currentSequence=0,currentStep=0,isReversePlay=!1,nextNoteTime=0,resetVisualState()}function resetAllStates(){resetPlaybackState(),resetVisualState()}function resetVisualState(){"undefined"!=typeof cci2&&"undefined"!=typeof initialCCI2&&(cci2=initialCCI2),isChannel11Active=!1,isPlaybackActive=!1,activeChannelIndex=null,activeArrayIndex={},renderingState={},"function"==typeof immediateVisualUpdate&&immediateVisualUpdate()}