console.log("Visualiser.js loaded");let isChannel11Active=!1,activeChannelIndex=null,isPlaybackActive=!1,renderingState={},activeArrayIndex={},arrayLengths={1:0,2:0,3:0};const accessLevelMappings={1:[1],2:[1,2],3:[1,2,3]};function initializeArrayLengths(){try{arrayLengths[1]=getColors1Length()||0}catch(e){console.error("Failed to get length for array 1",e)}try{arrayLengths[2]=getColors2Length()||0}catch(e){console.error("Failed to get length for array 2",e)}try{arrayLengths[3]=getColors3Length()||0}catch(e){console.error("Failed to get length for array 3",e)}console.log("Initialized array lengths:",arrayLengths)}function randomWithSeed(e){const t=1e4*Math.sin(e);return t-Math.floor(t)}function calculateCCI2(e,t){if(!t||t<=0)return console.error("Invalid array length:",t),1;const s=100*randomWithSeed(seed+(e+1)),n=Math.floor(s/100*t);return Math.min(Math.max(n,0),t-1)}function generateAccessLevel(e){const t=randomWithSeed(e);return Math.floor(3*t)+1}function selectArrayIndex(e,t,s){const n=randomWithSeed(e+100*s);switch(t){case 1:return 1;case 2:return Math.floor(2*n)+1;case 3:return Math.floor(3*n)+1;default:return console.error(`Invalid AccessLevel: ${t}`),1}}initializeArrayLengths();let AccessLevel=generateAccessLevel(seed);function updateVisualizer(e,t,s){console.log(`Updating visual:\nAccessLevel=${AccessLevel}\nArrayIndex=${t}\nCCI2=${e}\nIndex=${t}`),immediateVisualUpdate()}function shouldUpdateVisualizer(e,t,s){const n=renderingState[e]||{};return(n.arrayIndex!==t||n.cci2!==s)&&(renderingState[e]={arrayIndex:t,cci2:s},!0)}let needImmediateUpdate=!1;function immediateVisualUpdate(){needImmediateUpdate&&(needImmediateUpdate=!1)}function logInitialAssignments(){setTimeout((()=>{const e=[],t=generateAccessLevel(seed);console.log(`Access Level: ${t}`);for(let s=1;s<=16;s++){const n=selectArrayIndex(seed,t,s),i=calculateCCI2(s,arrayLengths[n]);renderingState[s]={arrayIndex:n,cci2:i},activeArrayIndex[s]=n,e.push(`Channel ${s}: ArrayIndex=${n}, CCI2=${i}`)}console.log("Initial Assignments:",e.join("; "))}),100)}document.addEventListener("internalAudioPlayback",(e=>{const{action:t,channelIndex:s,step:n}=e.detail;if("stop"===t)cci2=initialCCI2,isChannel11Active=!1,isPlaybackActive=!1,activeChannelIndex=null,activeArrayIndex={},renderingState={},console.log(`Stop received. CCI2 reset to initial value ${initialCCI2}`),immediateVisualUpdate();else if("activeStep"===t&&(!isPlaybackActive||activeChannelIndex!==s)){isPlaybackActive=!0,activeChannelIndex=s,AccessLevel=generateAccessLevel(seed);const e=0===s?1:s,t=selectArrayIndex(seed,AccessLevel,e);if(console.log(`AccessLevel=${AccessLevel}\nArrayIndex=${t}\nCCI2=${cci2}\nIndex=${t}`),!arrayLengths[t])return void console.error("Invalid array length:",arrayLengths[t]);cci2=calculateCCI2(e,arrayLengths[t]),shouldUpdateVisualizer(s,t,cci2)&&(activeArrayIndex[s]=t,updateVisualizer(cci2,t,s))}})),AudionalPlayerMessages.onmessage=e=>{const{action:t,channelIndex:s}=e.data;if(isPlaybackActive||"stop"===t)if("stop"===t)cci2=initialCCI2,isChannel11Active=!1,isPlaybackActive=!1,activeChannelIndex=null,activeArrayIndex={},renderingState={},console.log(`Stop received. CCI2 reset to initial value ${initialCCI2}`);else if(activeChannelIndex!==s){activeChannelIndex=s,AccessLevel=generateAccessLevel(seed);const e=0===s?1:s,t=selectArrayIndex(seed,AccessLevel,e);if(console.log(`AccessLevel=${AccessLevel}\nArrayIndex=${t}\nCCI2=${cci2}\nIndex=${t}`),!arrayLengths[t])return void console.error("Invalid array length:",arrayLengths[t]);cci2=calculateCCI2(e,arrayLengths[t]),shouldUpdateVisualizer(s,t,cci2)&&(activeArrayIndex[s]=t,updateVisualizer(cci2,t,s))}},setTimeout(logInitialAssignments,500);let lastLogTime=0;const logFrequency=1e3;function log(e){const t=Date.now();t-lastLogTime>1e3&&(console.log(e),lastLogTime=t)}function errorLog(e,t){console.error(e,t)}let scaleFactor=3,S=window.innerWidth,R=100*scaleFactor,H=2*R,RS=2*Math.PI/2e3/1e3,SR=100*scaleFactor,OR=100*scaleFactor;const cv=document.getElementById("cv"),cx=cv.getContext("2d");cv.width=S,cv.height=S;const workerScript="\nself.onmessage = function(e) {\n    const { id, vertices, pivot, angle } = e.data;\n    const updatedVertices = vertices.map(v => {\n        let x = v.x - pivot.x,\n            y = v.y - pivot.y,\n            x1 = x * Math.cos(angle) - y * Math.sin(angle),\n            y1 = x * Math.sin(angle) + y * Math.cos(angle);\n        return { x: x1 + pivot.x, y: y1 + pivot.y, z: v.z };\n    });\n\n    postMessage({ id, updatedVertices });\n};\n",blob=new Blob([workerScript],{type:"application/javascript"}),workerScriptURL=URL.createObjectURL(blob),rotationWorker=new Worker(workerScriptURL);function sendRotationRequest(e,t,s,n){rotationWorker.postMessage({id:e,vertices:t,pivot:s,angle:n})}function generateVerticesRequest(e,t,s,n){rotationWorker.postMessage({taskType:"generateVertices",data:{id:e,c:t,r:s,s:n}})}rotationWorker.onmessage=function(e){const{id:t,updatedVertices:s}=e.data;"cy"===t?cp.cy.updateVertices(s):t.startsWith("sp")&&cp[t].updateVertices(s)};class Cy{constructor(e,t,s,n){this.c=e,this.r=t,this.h=s,this.s=n,this.gV(),this.gF()}updateVertices(e){this.v=e}gV(){this.v=[];for(let e=0;e<=this.s;e++){let t=this.c.y-this.h/2+e/this.s*this.h;for(let e=0;e<=this.s;e++){let s=e/this.s*2*Math.PI,n=this.c.x+this.r*Math.cos(s),i=this.c.z+this.r*Math.sin(s);this.v.push({x:n,y:t,z:i})}}}gF(){this.f=[];for(let e=0;e<this.s;e++)for(let t=0;t<this.s;t++){let s=e*(this.s+1)+t,n=s+1,i=s+this.s+1,a=i+1;this.f.push([s,n,i]),this.f.push([n,a,i])}}rP(e,t){sendRotationRequest(this.id,this.v,e,t)}}class Sp{constructor(e,t,s){this.c=e,this.r=t,this.s=s,this.gV(),this.gF()}updateVertices(e){this.v=e}gV(){this.v=[];for(let e=0;e<=this.s;e++){let t=e/this.s*Math.PI;for(let e=0;e<=this.s;e++){let s=e/this.s*2*Math.PI,n=this.c.x+this.r*Math.sin(t)*Math.cos(s),i=this.c.y+this.r*Math.sin(t)*Math.sin(s),a=this.c.z+this.r*Math.cos(t);this.v.push({x:n,y:i,z:a})}}}gF(){this.f=[];for(let e=0;e<this.s;e++)for(let t=0;t<this.s;t++){let s=e*(this.s+1)+t,n=s+1,i=s+this.s+1,a=i+1;this.f.push([s,n,i]),this.f.push([n,a,i])}}rP(e,t){sendRotationRequest(this.id,this.v,e,t)}}class Cp{constructor(e,t,s,n){this.c=e,this.r=t,this.h=s,this.s=n,this.cy=new Cy(e,t,s,n),this.sp1=new Sp({x:e.x-t,y:e.y,z:e.z},t,n),this.sp2=new Sp({x:e.x+t,y:e.y,z:e.z},t,n)}updateVertices(e){this.v=e}rP(e,t){sendRotationRequest("cy",this.cy.v,e,t),sendRotationRequest("sp1",this.sp1.v,e,t),sendRotationRequest("sp2",this.sp2.v,e,t)}}let t,cp=new Cp({x:S/2,y:S/2,z:0},R,H,30),os1=new Sp({x:S/2-OR,y:S/2,z:0},SR,30),os2=new Sp({x:S/2+OR,y:S/2,z:0},SR,30);function d(e){let s;cx.clearRect(0,0,S,S),s=void 0===t?0:RS*(e-t)*100,t=e,cp.rP(cp.c,s),cp.drawObjectD2(cp.cy,e),cp.drawObjectD2(cp.sp1,e),cp.drawObjectD2(cp.sp2,e),requestAnimationFrame(d)}function getColorArray(e,t,s,n){const i=accessLevelMappings[n],a=activeArrayIndex[activeChannelIndex];if(!i.includes(a))return console.error(`Array index ${a} not allowed for AccessLevel ${n}`),[];switch(a){case 1:return getColors1(e,t,s);case 2:return getColors2(e,t,s);case 3:return getColors3(e,t,s);default:return console.error(`Invalid arrayIndex ${a}`),[]}}cp.drawObjectD2=function(e,t){let s=!isPlaybackActive||null===activeChannelIndex;for(let n of e.f){let i=n.map((t=>e.v[t])),a=i.map((e=>({x:e.x,y:e.y})));cx.beginPath(),cx.moveTo(a[0].x,a[0].y);for(let e=1;e<a.length;e++)cx.lineTo(a[e].x,a[e].y);cx.closePath();let r=180*Math.atan2(a[0].y-S/2,a[0].x-S/2)/Math.PI;if(s){let e=getColors1(r,t,i);if(!e||0===e.length)return void console.error("No colors returned for initial display.");cx.fillStyle=e[0]}else{activeArrayIndex[activeChannelIndex];let e=getColorArray(r,t,i,AccessLevel);if(!e||0===e.length)return void console.error(`No colors returned for AccessLevel: ${AccessLevel}`);cx.fillStyle=e[cci2%e.length]}cx.fill(),cx.strokeStyle="black",cx.stroke()}},requestAnimationFrame(d);