// visualiserLogging.js

const TOTAL_CHANNELS=16;function logTestValuesAndDistribution(){const e=1e7,t=Array.from({length:10},(()=>[])),n=Array.from({length:10},(()=>0));let o=0;for(let s=0;s<e;s++){const e=generateAccessLevel(s)-1;if(s<1e6&&t[e].length<10&&(t[e].push(s),o++),n[e]++,o>=100){console.log("Collected enough values, exiting early.");break}}logAccessLevelValues(t),logAccessLevelDistribution(n,e)}function logAccessLevelValues(e){console.log("Test Values for Each Access Level:"),e.forEach(((e,t)=>{console.log(`Access Level ${t+1}:`,e)}))}function logAccessLevelDistribution(e,t){console.log("Access Level Distribution:"),e.forEach(((e,n)=>{const o=(e/t*100).toFixed(2);console.log(`Access Level ${n+1}: ${o}%`)}))}function logInitialAssignments(e,t,n,o,s,c){setTimeout((()=>{const l=[];try{console.log(`Access Level: ${AccessLevel}`);for(let i=1;i<=TOTAL_CHANNELS;i++){const a=t(e,AccessLevel,i),r=n(i,o[a]);s[i]={arrayIndex:a,cci2:r},c[i]=a,l.push(`Channel ${i}: ArrayIndex=${a}, CCI2=${r}`)}console.log("Initial Assignments:",l.join("; "))}catch(e){errorLog("Error during initial assignments",e)}}),100)}logTestValuesAndDistribution(),setTimeout((()=>{logInitialAssignments(seed,selectArrayIndex,calculateCCI2,arrayLengths,renderingState,activeArrayIndex)}),500);let lastLogTime=0;const logFrequency=1e3;function log(e){const t=Date.now();t-lastLogTime>1e3&&(console.log(e),lastLogTime=t)}function errorLog(e,t){console.error(e,t)}function getAssignments(){const e=[];for(let t=1;t<=TOTAL_CHANNELS;t++){const{arrayIndex:n,cci2:o}=renderingState[t]||{};void 0!==n&&void 0!==o&&e.push(`Channel ${t}: ArrayIndex=${n}, CCI2=${o}`)}return e}function getTimecode(){return void 0===window.playbackStartTime?0:Date.now()-window.playbackStartTime}function downloadCurrentVisualStateWithText(){const e=document.querySelector("canvas");if(!e)return console.error("No canvas element found.");const t={accessLevel:AccessLevel,assignments:getAssignments(),timecode:getTimecode()},n=`\nAccess Level: ${t.accessLevel}\nAssignments: \n${t.assignments.join("\n")}\nTimecode: ${t.timecode} ms\n    `.trim(),o=document.createElement("canvas");o.width=e.width,o.height=e.height;const s=o.getContext("2d");s.drawImage(e,0,0);s.font="12px Arial",s.fillStyle="red",s.shadowColor="black",s.shadowBlur=4,s.textAlign="right",n.split("\n").forEach(((e,t)=>{s.fillText(e,o.width-10,o.height-10-14.399999999999999*t)})),o.toBlob((e=>{const t=document.createElement("a");t.href=URL.createObjectURL(e),t.download=`visual_state_${(new Date).toISOString()}.jpeg`,t.click()}),"image/jpeg")}document.addEventListener("playbackStarted",(()=>{window.playbackStartTime=Date.now(),console.log(`Playback started at ${window.playbackStartTime}`)})),document.addEventListener("keydown",(e=>{e.shiftKey&&"KeyP"===e.code&&downloadCurrentVisualStateWithText()}));