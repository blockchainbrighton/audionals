/* Ensure the keyboard container is 80% of viewport width and centered */
#keyboard {
  width: 80vw;
  margin: 10px auto;
  position: relative;
  box-sizing: border-box;
  height: 150px;
  overflow: hidden;
}

/* White keys container uses flex to distribute keys evenly */
#white-keys {
  display: flex;
  height: 100%;
  width: 100%;
  position: relative;
  z-index: 1;
}

/* Black keys container is absolutely positioned over white keys */
#black-keys {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  pointer-events: none;
}

/* White keys */
.white-key {
  flex: 1 0 calc(100% / 52);
  background: white;
  border: 1px solid #333;
  box-sizing: border-box;
  height: 100%;
  cursor: pointer;
  position: relative;
  transition: background 0.1s ease; /* Smooth color change */
}

/* Black keys */
.black-key {
  width: calc(100% / 52 * 0.6);
  height: 60%;
  background: black;
  border: 1px solid #000;
  box-sizing: border-box;
  cursor: pointer;
  pointer-events: auto;
  position: absolute;
  transition: background 0.1s ease;
}

/* Active state for playing keys */
.white-key.active,
.black-key.active {
  background: #ff4500; /* Bright orange */
}

/* Optional: Hover states for better UX */
.white-key:hover {
  background: #f0f0f0;
}

.black-key:hover {
  background: #333;
}

.armed {
  background: orange !important; /* Override default key colors */
}

/* Recorder Controls */
#recorderControls {
  margin-top: 10px;
}

#recorderControls button {
  margin: 5px;
  padding: 5px 10px;
}

#armRecord.armed {
  background-color: #ffcccc;
  animation: blink 1s infinite;
}

#armRecord.recording {
  background-color: red;
  color: white;
}

#playRecording.ready {
  background-color: green;
  color: white;
}

#quantizeControls label input[type="checkbox"] {
  margin-right: 5px;
}

#quantizeControls select {
  margin-left: 5px;
}

#quantizeControls select:disabled {
  background-color: #f0f0f0;
  color: #a0a0a0;
}

#quantizeResolution option[selected] {
  background-color: #d3d3d3;
}

@keyframes blink {
  50% {
    opacity: 0.5;
  }
}


/*
<details>
<summary>style.css Summary</summary>

### File Role
Styles the FM Synthesizer UI, focusing on the virtual keyboard layout, key states, and recorder controls. Ensures a responsive, centered design with visual feedback for interaction (active, armed, hover states).

### Dependencies
- None (pure CSS, targets `index.html` elements).

### Key Rules
- `#keyboard`:
  - Width: 80vw, centered, height: 150px, overflow hidden.
- `#white-keys`:
  - Flex layout, full height/width, z-index: 1.
- `#black-keys`:
  - Absolute, full width/height, z-index: 2, `pointer-events: none`.
- `.white-key`:
  - Flex: 1/52, white background, border, full height, cursor: pointer, transition: background 0.1s.
- `.black-key`:
  - Width: 60% of white key, height: 60%, black background, border, absolute, `pointer-events: auto`, transition: background 0.1s.
- `.active` (white/black): Bright orange (`#ff4500`) background.
- `:hover`:
  - White: `#f0f0f0`, Black: `#333`.
- `.armed`: Orange background, `!important` override.
- `#recorderControls`:
  - Margin: 10px top, buttons with 5px margin/padding.
- `#armRecord.armed`: Light red (`#ffcccc`), blinking animation.
- `#armRecord.recording`: Red background, white text.
- `#playRecording.ready`: Green background, white text.
- `#quantizeControls`:
  - Checkbox margin, select styling (disabled: `#f0f0f0`, `#a0a0a0`).
- `@keyframes blink`: 50% opacity fade every 1s.

### Potential Optimizations
- **Flex Efficiency**: `#white-keys` uses `flex: 1 0 calc(100% / 52)`; could simplify with `flex-grow`.
- **Absolute Positioning**: `#black-keys` overlay could use CSS Grid for cleaner alignment.
- **Color Management**: Hardcoded colors (e.g., `#ff4500`, `#ffcccc`) could use CSS variables.
- **Transitions**: Only `background` transitions; could extend to other properties (e.g., transform).
- **Specificity**: `.armed` uses `!important`; could adjust selector specificity instead.
- **Disabled Styling**: Repeated disabled styles (e.g., `#quantizeControls select:disabled`) could be centralized.

</summary>
</details>
*/