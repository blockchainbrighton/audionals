html {
    height: 100%; /* Ensure html takes full height */
}

body {
    font-family: sans-serif;
    margin: 0;
    background-color: #333;
    color: #fff;
    display: flex;
    height: 100vh; /* Use full viewport height */
    overflow: hidden; /* Prevent body scrollbars, columns will handle their own */
}

#palette {
    flex: 0 0 10%; /* grow 0, shrink 0, basis 10% */
    min-width: 180px; /* Minimum width for usability */
    background-color: #444;
    padding: 10px;
    user-select: none;
    overflow-y: auto; /* Allow scrolling if many modules */
    height: 100%; /* Fill parent height in desktop flex row */
    box-sizing: border-box;
}

.module-item {
    padding: 8px;
    margin-bottom: 5px;
    background-color: #555;
    cursor: grab;
    border: 1px solid #666;
    text-align: center;
}

#canvas-container {
    /* OLD flex properties that caused the issue:
    flex: 0 0 80%;
    flex-grow: 1;
    */
    /* NEW flex properties: allow growing and shrinking, basis is content-defined */
    flex: 1 1 auto; /* flex-grow: 1, flex-shrink: 1, flex-basis: auto */

    position: relative;
    height: 100%; /* Fill parent height in desktop flex row */
    display: flex; /* For centering the canvas */
    justify-content: center; /* Center canvas horizontally */
    align-items: center; /* Center canvas vertically */
    overflow: auto; /* If canvas (800x600) is larger than container space */
    box-sizing: border-box;
}

#canvas {
    width: 800px; /* Fixed width as per original */
    height: 600px; /* Fixed height as per original */
    background-color: #2a2a2a;
    border: 1px solid #555;
    position: relative; /* For absolute positioning of modules AND #connections */
    overflow: hidden; /* Keep modules within bounds (visual clipping, not functional for element placement) */
    flex-shrink: 0; /* Prevent canvas from shrinking if container is too small */
}

#connections {
    position: absolute;
    top: 0; left: 0;
    width: 100%; /* Covers the #canvas */
    height: 100%; /* Covers the #canvas */
    pointer-events: none; /* SVG should not intercept mouse events meant for canvas/modules */
}

.module {
    position: absolute;
    background-color: #606070;
    border: 1px solid #888;
    border-radius: 5px;
    padding: 5px;
    min-width: 100px;
    cursor: default; /* Default to move, specific controls override */
    box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
}

.module header {
    background-color: #505060;
    padding: 5px;
    margin: -5px -5px 5px -5px;
    text-align: center;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    cursor: move; /* Header is draggable */
}

.module input[type="range"] {
    width: calc(100% - 10px);
    margin: 5px;
}

.connector {
    width: 16px; height: 16px;
    background-color: #808090;
    border: 1px solid #aaa;
    border-radius: 50%;
    position: absolute;
    bottom: -8px; /* Position half outside */
    cursor: pointer;
    box-sizing: border-box;
}

.connector.input  { left:  15px; background-color: #70a070; } /* Greenish for input */
.connector.output { right: 15px; background-color: #a07070; } /* Reddish for output */
.connector.selected { border: 2px solid yellow; }

#instructions-panel {
    flex: 0 0 10%; /* grow 0, shrink 0, basis 10% */
    min-width: 200px; /* Minimum width for readability */
    background-color: #444;
    padding: 20px;
    color: #fff;
    overflow-y: auto; /* Allow scrolling for long instructions */
    height: 100%; /* Fill parent height in desktop flex row */
    box-sizing: border-box;
}

#instructions-panel h3,
#instructions-panel h4 {
    color: #eee;
    margin-bottom: 10px;
}

#instructions-panel h3 {
    font-size: 1.4em;
    border-bottom: 1px solid #555;
    padding-bottom: 5px;
    margin-top: 0; /* First element, remove top margin */
}

#instructions-panel h4 {
    font-size: 1.1em;
    margin-top: 20px;
}

#instructions-panel p,
#instructions-panel ul,
#instructions-panel ol {
    font-size: 0.95em;
    line-height: 1.6;
    margin-bottom: 10px;
}

#instructions-panel ul,
#instructions-panel ol {
    padding-left: 20px;
}

#instructions-panel li {
    margin-bottom: 5px;
}

#instructions-panel .instr-icon {
    margin-right: 8px;
    display: inline-block; /* Ensures proper spacing */
}

#instructions-panel code {
    background-color: #555;
    padding: 2px 4px;
    border-radius: 3px;
    font-family: monospace;
}

/* Responsive adjustments for mobile/stacked layout */
@media (max-width: 820px) { /* Adjusted breakpoint slightly higher than canvas width */
    body {
        flex-direction: column;
        /* Keep height: 100vh and overflow: hidden to manage scrolling within flex children */
    }

    #palette,
    #canvas-container,
    #instructions-panel {
        width: 100%;    /* Take full width in column layout */
        min-width: 0;   /* Override desktop min-widths */
        flex-grow: 0;   /* Reset grow from canvas-container for mobile */
        flex-shrink: 1; /* Allow shrinking in mobile column if needed, though heights are set */
        flex-basis: auto; /* Reset basis for mobile */
        /* Override desktop height: 100% */
    }

    #palette {
        height: 150px; /* Fixed height for palette */
        flex-shrink: 0; /* Don't shrink palette height in mobile */
        /* overflow-y: auto; is already set */
    }

    #canvas-container {
        flex-grow: 1;   /* Take up remaining vertical space in mobile */
        height: auto;   /* Height will be determined by flex-grow in mobile */
        min-height: 250px; /* Ensure it has some minimum space in mobile */
        /* overflow: auto; is already set and crucial for the fixed-size canvas */
    }

    #instructions-panel {
        height: 200px; /* Fixed height for instructions panel in mobile */
        flex-shrink: 0; /* Don't shrink instructions panel height in mobile */
        /* overflow-y: auto; is already set */
    }
}