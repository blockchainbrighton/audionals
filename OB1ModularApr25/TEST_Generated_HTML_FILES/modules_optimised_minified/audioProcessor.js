// --- audioProcessor.js ---
import{base64ToArrayBuffer}from"/content/6ee146a17e6582c989ebaa2f2c8b6a039f29493f858d59a89edfb0d3485a7fc4i0";import{showError}from"/content/943baf5a8d4569764b325ed48a2b269fafaa7429463ab69f6c6a9524974d0d92i0";import{triggerAnimation as triggerImageAnimation}from"/content/934cf04352b9a33a362848a4fd148388f5a3997578fbdfaabd116a8f2932f7b5i0";import*as timingManager from"/content/de1f95cbea6670453fcfeda0921f55fe111bd6b455f405d26dbdfedc2355f048i0";const A4_MIDI_NOTE=69,A4_FREQUENCY=440,SEMITONE_RATIO=Math.pow(2,1/12),MIN_MIDI_NOTE=21,MAX_MIDI_NOTE=108,SMOOTH_PARAM_TIME=.01;let audioContext=null,mainGainNode=null,decodedBuffer=null,reversedBuffer=null,isReversed=!1,currentTempo=78,currentGlobalPitch=1,currentVolume=1,originalSampleFrequency=null,midiNoteToPlaybackRate=new Map;const _ensureContextRunning=async()=>{if(!audioContext||"suspended"===audioContext.state)try{return await(audioContext?.resume()),!0}catch(e){throw showError("Could not resume audio context."),e}return!0},_getCurrentBuffer=()=>{const e=isReversed?reversedBuffer:decodedBuffer;return e||showError((isReversed?"Reversed":"Original")+" audio buffer unavailable."),e},_playBuffer=(e,t,r)=>{if(!e)return null;try{const o=audioContext.createBufferSource();return o.buffer=e,o.playbackRate.value=r,o.connect(mainGainNode),triggerImageAnimation(),o.start(t),o}catch(e){return showError("Failed to play audio sample."),null}},_createReversedBuffer=e=>{if(!e||!audioContext)return null;try{const{numberOfChannels:t,length:r,sampleRate:o}=e,n=audioContext.createBuffer(t,r,o);for(let o=0;o<t;o++){const t=e.getChannelData(o),a=n.getChannelData(o);for(let e=0,o=r-1;e<r;e++,o--)a[e]=t[o]}return n}catch(e){return showError("Failed to create reversed buffer."),null}},_setupAudioContext=()=>{try{if(window.AudioContext=window.AudioContext||window.webkitAudioContext,!window.AudioContext)throw new Error("Web Audio API not supported.");audioContext=new AudioContext,mainGainNode=audioContext.createGain(),mainGainNode.gain.setValueAtTime(currentVolume,audioContext.currentTime),mainGainNode.connect(audioContext.destination)}catch(e){throw showError(`Audio Setup Error: ${e.message}`),e}},_decodeAudioAndPrepare=async e=>{if(!e||"string"!=typeof e)throw new Error("Invalid audio data.");try{const t=base64ToArrayBuffer(e);decodedBuffer=await audioContext.decodeAudioData(t),reversedBuffer=_createReversedBuffer(decodedBuffer);const r=document.getElementById("audio-meta-frequency")?.textContent.trim();if(originalSampleFrequency=parseFloat(r.split(" ")[0]),isNaN(originalSampleFrequency))throw new Error("Invalid frequency.");_calculatePlaybackRates()}catch(e){throw showError(`Audio Decoding Error: ${e.message}`),e}},_calculatePlaybackRates=()=>{if(originalSampleFrequency&&!(originalSampleFrequency<=0)){midiNoteToPlaybackRate.clear();for(let e=21;e<=108;e++){const t=440*Math.pow(SEMITONE_RATIO,e-69)/originalSampleFrequency;midiNoteToPlaybackRate.set(e,t)}}};export const init=async(e,t=78,r=1)=>{audioContext=null,mainGainNode=null,decodedBuffer=null,reversedBuffer=null,originalSampleFrequency=null,midiNoteToPlaybackRate.clear(),isReversed=!1,currentTempo=t,currentGlobalPitch=r;try{return _setupAudioContext(),await _decodeAudioAndPrepare(e),timingManager.init(audioContext,currentTempo,currentGlobalPitch),!0}catch(e){return audioContext&&"closed"!==audioContext.state&&audioContext.close(),!1}};export const playOnce=async()=>{if(!await _ensureContextRunning())return;const e=_getCurrentBuffer();e&&_playBuffer(e,audioContext.currentTime,currentGlobalPitch)};export const startLoop=async()=>{if(!timingManager.getLoopingState())try{if(!await _ensureContextRunning())return;const e=_getCurrentBuffer();if(!e)return;timingManager.startLoop((t=>_playBuffer(e,t,currentGlobalPitch)))}catch(e){showError("Failed to start loop.")}};export const stopLoop=()=>timingManager.getLoopingState()&&timingManager.stopLoop();export const setScheduleMultiplier=e=>{const t=parseInt(e,10);t>=1&&timingManager.setScheduleMultiplier(t)};export const setTempo=e=>{e>0&&(currentTempo=e,timingManager.setTempo(e))};export const setGlobalPitch=e=>{e>0&&(currentGlobalPitch=e,timingManager.setPitch(e))};export const setVolume=e=>{e>=0&&mainGainNode&&audioContext&&(currentVolume=e,mainGainNode.gain.setTargetAtTime(e,audioContext.currentTime,.01))};export const toggleReverse=()=>isReversed&&!reversedBuffer?(showError("Reversed audio unavailable."),isReversed):(isReversed=!isReversed,timingManager.getLoopingState()&&(timingManager.stopLoop(),startLoop().catch((e=>showError("Error restarting loop after reverse toggle: "+e)))),isReversed);export const getLoopingState=()=>timingManager.getLoopingState()||!1;export const getReverseState=()=>isReversed;export const getAudioContextState=()=>audioContext?.state||"unavailable";export const resumeContext=()=>_ensureContextRunning();export const getPlaybackRateForNote=e=>midiNoteToPlaybackRate.get(e);export const playSampleAtRate=async e=>{if(e<=0)return;if(!await _ensureContextRunning())return;const t=_getCurrentBuffer();t&&_playBuffer(t,audioContext.currentTime,e)};