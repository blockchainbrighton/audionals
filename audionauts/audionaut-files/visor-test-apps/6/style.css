:root {
    --primary-color: #00ffd0; --bg-color: #1a1a2e; --secondary-color: #e94560;
    --accent-color: #fca311; --font-display: 'VT323', monospace; --font-body: 'Inter', sans-serif;
    --panel-bg: rgba(0, 0, 0, 0.2); --border-color: rgba(0,255,208, 0.3);
  }
  body {
    background: var(--bg-color); color: var(--primary-color); font-family: var(--font-body);
    margin: 0; height: 100vh; box-sizing: border-box; overflow: hidden; display: grid;
    grid-template-columns: 1fr 450px; grid-template-rows: 1fr; padding: 20px; gap: 20px;
  }
  .helmet-section { display: flex; justify-content: center; align-items: center; height: 100%; }
  .helmet-container { position: relative; width: 80vh; height: 80vh; max-width: 100%; }
  .helmet-img { width: 100%; height: 100%; image-rendering: pixelated; image-rendering: crisp-edges; display: block; position: absolute; top: 0; left: 0; z-index: 10; pointer-events: none; }
  .visor-hud {
    position: absolute; left: 12.5%; top: 23.5%; width: 73.5%; height: 42.5%;
    z-index: 5; background: rgba(0, 255, 255, 0.05); display: flex; align-items: center;
    justify-content: center; overflow: hidden; color: var(--primary-color);
    font-family: var(--font-display); font-size: 3.5vmin; text-align: center;
    text-shadow: 0 0 5px var(--primary-color); transition: transform 0.3s ease;
  }
  .visor-hud.mirrored { transform: scaleX(-1); }
  .hud-scene-container { width: 100%; height: 100%; position: relative; opacity: 0; }
  .hud-scene-container.active { opacity: 1; }
  .fade-in { animation: fadeIn calc(var(--transition-duration, 500) * 1ms) forwards; }
  .fade-out { animation: fadeOut calc(var(--transition-duration, 500) * 1ms) forwards; }
  .slide-up-in { animation: slideInUp calc(var(--transition-duration, 500) * 1ms) forwards; }
  .slide-up-out { animation: slideOutUp calc(var(--transition-duration, 500) * 1ms) forwards; }
  .slide-down-in { animation: slideInDown calc(var(--transition-duration, 500) * 1ms) forwards; }
  .slide-down-out { animation: slideOutDown calc(var(--transition-duration, 500) * 1ms) forwards; }
  
  .hud-layer {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: flex-start; /* Important for scroll origin */
    top: var(--y-pos); left: var(--x-pos); width: var(--w-size); height: var(--h-size);
    transform: translate(-50%, -50%);
    filter: var(--filter);
    overflow: hidden; /* This acts as the clipping mask/window */
  }
  
  /* Default state: content should not exceed the layer's bounds */
  .hud-layer > * {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
  /* For <p> tags, default to wrapping */
.hud-layer p {
    padding: 5%;
    overflow-wrap: break-word;
    white-space: pre-wrap; /* This is the default wrapping state */
  }
  
  /* === THE FIX === */
  /* When no-wrap is desired, override the default and remove parent width constraints */
  .text-no-wrap {
    white-space: nowrap;
    max-width: none; /* THIS IS THE KEY: It allows the element to grow as wide as its content */
  }
  
  /* For a scrolling marquee, we can keep specific padding or other styles. */
  /* The max-width is now handled by the rule above, so it's not needed here. */
  .anim-scroll.text-no-wrap {
    padding: 0 1em; /* Add some horizontal padding for aesthetics */
  }
  
  .hud-layer iframe { width: 100%; height: 100%; border: none; background: #000; }
  .anim-scroll { animation: var(--anim-name) var(--anim-duration) linear infinite; }
  @keyframes marquee-left {
    from { transform: translateX(100%); }
    to { transform: translateX(-100%); }
  }
  @keyframes marquee-right {
    from { transform: translateX(-100%); }
    to { transform: translateX(100%); }
  }
  @keyframes scroll-up { from { transform: translateY(100%); } to { transform: translateY(-100%); } }
  @keyframes scroll-down { from { transform: translateY(-100%); } to { transform: translateY(100%); } }
  
  @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
  @keyframes fadeOut { from { opacity: 1; } to { opacity: 0; } }
  @keyframes slideInUp { from { opacity: 0; transform: translateY(100%); } to { opacity: 1; transform: translateY(0); } }
  @keyframes slideOutUp { from { opacity: 1; transform: translateY(0); } to { opacity: 0; transform: translateY(-100%); } }
  @keyframes slideInDown { from { opacity: 0; transform: translateY(-100%); } to { opacity: 1; transform: translateY(0); } }
  @keyframes slideOutDown { from { opacity: 1; transform: translateY(0); } to { opacity: 0; transform: translateY(100%); } }
  .control-panel { background: var(--panel-bg); padding: 20px; border-radius: 8px; border: 1px solid var(--border-color); height: 100%; overflow-y: auto; box-sizing: border-box; }
  .control-panel h2 { font-family: var(--font-display); font-size: 2em; margin-top: 0; text-align: center; letter-spacing: 2px; }
  .control-panel fieldset { border: 1px solid var(--border-color); margin-bottom: 20px; padding: 15px; }
  .control-panel legend { padding: 0 10px; font-family: var(--font-display); font-size: 1.2em; color: var(--accent-color); }
  .control-group { display: flex; flex-direction: column; margin-bottom: 12px; }
  .control-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 12px; }
  .control-grid.three-cols { grid-template-columns: repeat(3, 1fr); }
  .control-group label { font-size: 0.9em; margin-bottom: 4px; opacity: 0.8; }
  .checkbox-group { flex-direction: row; align-items: center; justify-content: center; gap: 8px; }
  .checkbox-group.single-line { justify-content: flex-start; margin: -10px 0 0; }
  input[type=text], input[type=number], select { width: 100%; padding: 8px; background: var(--bg-color); color: var(--primary-color); border: 1px solid var(--primary-color); border-radius: 4px; font-family: var(--font-body); box-sizing: border-box; }
  input[type=range] { padding: 0; }
  button { width: 100%; padding: 10px; border: 1px solid var(--accent-color); background: var(--accent-color); color: var(--bg-color); font-family: var(--font-display); font-size: 1.2em; letter-spacing: 1px; cursor: pointer; border-radius: 4px; transition: all 0.2s ease; }
  button:hover { background: var(--bg-color); color: var(--accent-color); }
  button:disabled { background: #555; border-color: #555; color: #999; cursor: not-allowed; }
  .playlist-controls { display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; margin-bottom: 15px; }
  #playBtn.active { background: var(--secondary-color); border-color: var(--secondary-color); color: #fff; }
  #clearBtn, #loadDefaultBtn { background-color: var(--secondary-color); border-color: var(--secondary-color); font-size: 1em; }
  #clearBtn:hover, #loadDefaultBtn:hover { background: var(--bg-color); color: var(--secondary-color); }
  .playlist-display, .layer-list { background: rgba(0, 0, 0, 0.3); padding: 10px; border-radius: 4px; min-height: 80px; max-height: 250px; overflow-y: auto; margin-bottom: 10px; }
  .playlist-item, .layer-item { display: flex; justify-content: space-between; align-items: center; padding: 8px; border-radius: 3px; margin-bottom: 5px; background: rgba(0,0,0,0.2); transition: background-color 0.3s; cursor: pointer; }
  .playlist-item:hover, .layer-item:hover { background-color: rgba(0, 255, 208, 0.1); }
  .playlist-item.playing { background-color: rgba(0, 255, 208, 0.2); border-left: 3px solid var(--accent-color); font-weight: bold; }
  .playlist-item.selected, .layer-item.selected { background-color: rgba(252, 163, 17, 0.3); border-left: 3px solid var(--accent-color); font-weight: bold; }
  .item-controls button { width: auto; padding: 0 8px; font-size: 0.8em; line-height: 1.5em; background: var(--secondary-color); border-color: var(--secondary-color); }
  .editor-subtitle { font-family: var(--font-display); font-size: 1.1em; margin: 15px 0 10px; text-align: center; border-bottom: 1px solid var(--border-color); padding-bottom: 5px; }
  .slider-group label { display: flex; justify-content: space-between; }
  @media (max-width: 1000px) { body { grid-template-columns: 1fr; grid-template-rows: auto auto; height: auto; min-height: 100vh; overflow-y: auto; } .helmet-container { width: 90vw; height: 90vw; } .control-panel { width: 100%; height: auto; overflow-y: visible; } }