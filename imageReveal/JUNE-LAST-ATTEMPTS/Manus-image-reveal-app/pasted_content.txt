### 📌 Context & Goal

You are an expert full-stack JavaScript engineer. Generate **fully working, production-ready code** for a browser-based **“Music-Synced Image-Reveal”** application. The app unveils an image through visual effects that follow the rhythm and structure of a user-supplied song.

Deliver **complete, runnable code** (no pseudocode) organised exactly as:

1. `index.html`
2. `styles.css`
3. `main.js`
4. `effects/` folder with one class file per effect
5. `tests/` folder with Jest unit tests
6. `README.md` with local-run instructions (pure HTML/JS/CSS, no build step)

---

### 🛠️ Functional Requirements

| Area                | Requirement|
| ------------------- ||
| **Inputs**          | Image URL, Song URL, Tempo (BPM — auto-detected but overrideable), Number of bars, Random seed                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| **Controls**        | Start, Pause/Resume, Reset; sliders for reveal speed & effect intensity; real-time progress bar|
| **Canvas**          | Single full-window `<canvas>` rendering at 60 fps                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
| **Effects**         | Implement **12 modular effects**, each in its own file:<br>1. **V-Shift** (vertical slice offset)<br>2. **Scanlines**<br>3. **Gaussian Blur**<br>4. **Pixelation**<br>5. **Alpha Fade**<br>6. **Glitch** (RGB shift + noise)<br>7. **Color Sweep**<br>8. **Brightness-Based Reveal**<br>9. **Glyph Reveal** – pixels resolve from random glyphs<br>10. **Ripple Distortion** – radial wave from beat-synced origin<br>11. **Radial Reveal** – circular wipe expanding/contracting from a controllable origin<br>12. **Ink Diffusion** – procedural blotches spread outward, unveiling pixels like ink soaking paper |
| **Synchronisation** | Beat-accurate timing driven by BPM & bars; seeded PRNG controls effect order, duration & parameter randomisation                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| **Data Extraction** | Pre-compute image features (color histogram, brightness map, edge map); auto-detect song BPM & length via Web Audio API and expose override fields                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
| **Extensibility**   | Drop-in plugin architecture: any new `effects/*.js` file auto-registers via reflection|
| **Accessibility**   | Keyboard shortcuts for primary controls; ARIA labels on all interactive elements|

---

### 🖥️ Technical Requirements

* **HTML** Semantic; root `<div id="app">` contains controls + canvas.
* **CSS** Responsive flex-center layout; CSS custom properties & `clamp()`; light & dark themes.
* **JavaScript**

  * ES2022 modules; ESLint + Prettier clean.
  * Use `requestAnimationFrame`; heavy image ops via `OffscreenCanvas` or Web Workers.
  * Beat tracking with `AudioContext` + `AudioWorklet`.
  * Deterministic PRNG seeded from user input.
  * Each effect extends `EffectBase` abstract class.
* **Performance** Maintain 60 fps on 1080p canvas (stats panel provided).
* **Security** Sanitise URLs; README advises `Content-Security-Policy`.
* **Testing** Jest tests for utilities, PRNG repeatability, effect pipeline scheduling, glyph/radial/ink convergence.
* **Documentation** JSDoc on all public APIs.

---

### 🧪 TDD Workflow

1. Write failing Jest tests for PRNG consistency, beat scheduler accuracy, and effect-specific convergence (Glyph, Radial, Ink).
2. Implement code until tests pass.
3. Add CI badge instructions for GitHub Actions in README.

---

### 📈 Output Format

Return a single Markdown block:

```markdown
/ (project root)
├── index.html
├── styles.css
├── main.js
├── effects/
│   ├── EffectBase.js
│   ├── VShift.js
│   ├── Scanlines.js
│   ├── GaussianBlur.js
│   ├── Pixelation.js
│   ├── AlphaFade.js
│   ├── Glitch.js
│   ├── ColorSweep.js
│   ├── BrightnessReveal.js
│   ├── GlyphReveal.js
│   ├── RippleDistortion.js
│   ├── RadialReveal.js
│   └── InkDiffusion.js
├── tests/
│   ├── prng.test.js
│   ├── scheduler.test.js
│   ├── glyphReveal.test.js
│   ├── radialReveal.test.js
│   └── inkDiffusion.test.js
└── README.md
```

Inside each listed file, include full, working code. **Provide the files only—no extra prose.**