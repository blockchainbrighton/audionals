 /* --- Base Styles --- */
 :root {
    --controls-bg: #f0f0f0; --canvas-bg: #000; --button-bg: #e0e0e0;
    --button-hover-bg: #d0d0d0; --text-color: #333; --border-color: #bbb;
    --slider-thumb-bg: #888; --slider-track-bg: #ddd; --error-color: #d33;
    --warning-color: #e9900a; --info-color: #666;
    --modal-bg: rgba(255, 255, 255, 0.98);
    --modal-overlay-bg: rgba(0, 0, 0, 0.6);
    --modal-border: #ccc;
    --code-bg: #eee;
    --code-text: #333;
}
body {
    font-family: sans-serif; display: flex; flex-direction: column; align-items: center;
    padding: 20px; background-color: #f9f9f9; color: var(--text-color); margin: 0; min-height: 100vh; box-sizing: border-box;
    transition: padding 0.3s ease;
}
h1 { margin-top: 0; color: #555; text-align: center; font-size: 1.5em; position: relative; display: inline-block; padding-right: 35px; transition: opacity 0.3s ease, transform 0.3s ease; }
#controls { background-color: var(--controls-bg); padding: 15px 20px; border-radius: 8px; margin-bottom: 20px; display: grid; grid-template-columns: auto 1fr; gap: 10px 15px; align-items: center; box-shadow: 0 2px 5px rgba(0,0,0,0.1); border: 1px solid var(--border-color); max-width: 600px; width: 90%; transition: opacity 0.3s ease, transform 0.3s ease, margin 0.3s ease; }
#controls label, #controls button, #controls input, #controls select { font-size: 0.9rem; padding: 8px 10px; border-radius: 4px; border: 1px solid var(--border-color); box-sizing: border-box; }
#controls label { border: none; padding: 0; text-align: right; font-weight: bold; white-space: nowrap; }
#controls input[type="file"] { padding: 3px; }
#controls button { background-color: var(--button-bg); cursor: pointer; transition: background-color 0.2s ease; width: 100%; }
#controls button:hover:not(:disabled) { background-color: var(--button-hover-bg); }
#controls button:disabled { cursor: not-allowed; opacity: 0.6; }
#controls input[type="range"] { width: 100%; cursor: pointer; appearance: none; background: var(--slider-track-bg); height: 8px; padding: 0; margin: 0 5px 0 0; vertical-align: middle; }
#controls input[type="range"]::-webkit-slider-thumb { appearance: none; width: 16px; height: 16px; background: var(--slider-thumb-bg); border-radius: 50%; cursor: pointer; }
#controls input[type="range"]::-moz-range-thumb { width: 16px; height: 16px; background: var(--slider-thumb-bg); border-radius: 50%; cursor: pointer; border: none; }
.duration-control span { display: inline-block; vertical-align: middle; }
#duration-value { display: inline-block; min-width: 45px; text-align: left; font-weight: bold; }
.button-group { grid-column: 1 / -1; display: flex; gap: 10px; justify-content: center; margin-top: 10px; }
.button-group button { flex: 1 1 auto; max-width: 150px; }
#reverse-container { grid-column: 1 / -1; display: flex; align-items: center; justify-content: center; gap: 5px; margin-top: 5px; }
.reverse-label { text-align: left; font-weight: normal; order: 1; }
#reverse-checkbox { order: 0; width: auto; padding: 0; margin: 0; }
.mode-options { display: none; grid-column: 1 / -1; display: grid; grid-template-columns: auto 1fr; gap: inherit; align-items: center; margin-top: 8px; padding-left: 20px; border-left: 2px solid var(--border-color); padding-top: 5px; padding-bottom: 5px; }
.mode-options.visible { display: grid; }
.mode-options label { font-weight: normal; font-size: 0.85rem; white-space: nowrap; }
.mode-options .slider-container { display: flex; align-items: center; gap: 8px; }
.mode-options .slider-container input[type="range"] { flex-grow: 1; margin: 0; }
.mode-options .slider-container span { min-width: 35px; text-align: left; font-size: 0.85rem; font-weight: bold; }
#canvas-container {
    width: 90%; max-width: 800px; height: auto; max-height: 75vh;
    position: relative; background-color: var(--canvas-bg); box-shadow: 0 4px 8px rgba(0,0,0,0.15); border: 1px solid var(--border-color); margin-bottom: 20px; display: flex; justify-content: center; align-items: center; overflow: hidden; min-height: 200px;
    transition: width 0.3s ease, max-width 0.3s ease, height 0.3s ease, max-height 0.3s ease, margin 0.3s ease;
    cursor: default; /* Default cursor */
 }
#canvas-container.clickable {
     cursor: pointer; /* Indicate clickability for toggle */
 }
canvas { display: block; max-width: 100%; max-height: 100%; object-fit: contain; background-color: transparent; }
#status { margin-top: 10px; color: var(--info-color); min-height: 1.2em; font-style: italic; text-align: center; width: 90%; max-width: 600px; font-size: 0.9em; transition: opacity 0.3s ease, transform 0.3s ease; }
#info-button { position: absolute; top: 50%; right: 0; transform: translateY(-50%); width: 24px; height: 24px; padding: 0; border-radius: 50%; font-size: 1em; font-weight: bold; font-family: serif; line-height: 22px; text-align: center; cursor: pointer; border: 1px solid var(--border-color); background-color: var(--button-bg); color: var(--text-color); transition: background-color 0.2s ease, opacity 0.3s ease; }
#info-button:hover { background-color: var(--button-hover-bg); }
.modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: var(--modal-overlay-bg); padding-top: 60px; box-sizing: border-box; }
.modal.visible { display: block; }
.modal-content { background-color: var(--modal-bg); margin: auto; padding: 25px 30px; border: 1px solid var(--modal-border); width: 80%; max-width: 700px; border-radius: 8px; box-shadow: 0 5px 15px rgba(0,0,0,0.3); position: relative; }
.modal-close-button { color: #aaa; position: absolute; top: 10px; right: 15px; font-size: 28px; font-weight: bold; line-height: 1; cursor: pointer; }
.modal-close-button:hover, .modal-close-button:focus { color: black; text-decoration: none; }
.modal h2 { margin-top: 0; color: #444; border-bottom: 1px solid #eee; padding-bottom: 10px; margin-bottom: 20px; } .modal h3 { margin-top: 25px; margin-bottom: 10px; color: #555; } .modal p, .modal ul { font-size: 0.95em; line-height: 1.6; margin-bottom: 15px; } .modal ul { padding-left: 25px; } .modal li { margin-bottom: 8px; } .modal code { background-color: var(--code-bg); color: var(--code-text); padding: 3px 6px; border-radius: 3px; font-family: monospace; font-size: 0.9em; white-space: pre-wrap; word-wrap: break-word; } .modal strong { font-weight: bold; } .modal .indent { margin-left: 20px; } .modal .code-block { display: block; background-color: var(--code-bg); color: var(--code-text); padding: 10px 15px; border-radius: 4px; font-family: monospace; font-size: 0.9em; white-space: pre-wrap; word-wrap: break-word; margin-top: 5px; margin-bottom: 15px; }

/* --- Fullscreen Mode Styles --- */
body.api-fullscreen-active {
padding: 0; /* Remove padding on body itself for true fullscreen */
overflow: hidden;
/* Use flex on body to center container */
display: flex;
justify-content: center;
align-items: center;
min-height: 100vh; /* Ensure body takes full height */
background-color: var(--canvas-bg); /* Optional: Match canvas bg */
}

/* Hide UI elements completely */
body.api-fullscreen-active h1,
body.api-fullscreen-active #controls,
body.api-fullscreen-active #status,
body.api-fullscreen-active #info-button {
display: none; /* Remove from layout flow */
/* Keep opacity/transform for potential exit transition, though not strictly needed */
opacity: 0;
transform: translateY(-20px);
pointer-events: none;
margin: 0; /* Remove all margins */
}

/* Canvas Container in Fullscreen */
body.api-fullscreen-active #canvas-container {
/* Container centers the canvas element */
display: flex;
justify-content: center;
align-items: center;

/* Container takes available space (now centered in body) */
/* It doesn't need explicit size if canvas has size */
width: auto;
height: auto;
max-width: 100vw; /* Constrain to viewport */
max-height: 100vh; /* Constrain to viewport */

/* Remove styles from non-fullscreen */
margin: 0;
border: none;
box-shadow: none;
padding: 0;
background-color: transparent; /* Let body handle bg or canvas */
aspect-ratio: unset !important; /* Override JS */
}

/* Canvas Element in Fullscreen */
body.api-fullscreen-active #canvas-container canvas {
/* Set target size: 80vh square */
height: 80vh;
width: 80vh;

/* Ensure it doesn't exceed viewport bounds if 80vh is too big */
max-width: 100vw;
max-height: 100vh;

/* Maintain aspect ratio if constrained by max-w/h */
object-fit: contain;

display: block; /* Ensure it behaves as a block */
background-color: transparent; /* Or specific color if needed */
}

/* --- API Toggle Mode Hiding --- */
#canvas-container.api-toggle-hidden canvas {
visibility: hidden; /* Hide the canvas visually but keep layout */
/* Alternatively, use opacity: 0; if you prefer fading */
}

.click-overlay{
position:absolute;
inset:0;
display:flex;
justify-content:center;
align-items:center;

font-family:'Press Start 2P',monospace;
font-size:1.25rem;
letter-spacing:1px;
color:#00ff96;
text-shadow:0 0 4px #00ff96,0 0 8px #00ff96;

pointer-events:none;
opacity:0;
transition:opacity .35s ease-out;
}
.click-overlay.visible{opacity:1}
.hidden{opacity:0}
