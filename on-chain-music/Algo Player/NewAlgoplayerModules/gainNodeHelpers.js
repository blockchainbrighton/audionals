// GainNodeHelpers.js
window.GainNodeHelper=(()=>{const n=window.globalData||(window.globalData={gainNodes:{}}),{gainNodes:o,audioContext:e,masterGain:a}=n;a||(n.masterGain=e.createGain(),n.masterGain.connect(e.destination));let t=null,l=null,s=!1;const c=(a,c=!1)=>{const{id:i,channels:r}=a;c?l=i:t=i,r.length?(o[i]=o[i]??{},r.forEach((({id:a})=>{if(!o[i][a]){const t=e.createGain();t.gain.value=1,t.connect(n.masterGain),o[i][a]=t}})),t&&l&&!s&&(console.log("Gain Nodes Map:",{currentSong:o[t]??{},nextSong:o[l]??{}}),s=!0)):console.warn(`No channels found for song ${i}.`)};return{createGainNodesForSong:n=>c(n,!1),prepareNextSong:n=>c(n,!0),cleanupGainNodesForSong:n=>{const e=o[n];e?(Object.values(e).forEach((n=>n.disconnect())),console.log(`Cleaned up gain nodes for Song ID: ${n}`),delete o[n],n!==t&&n!==l||(n===t&&(t=null),n===l&&(l=null),s=!1)):console.warn(`No gain nodes found to clean up for song ${n}.`)}}})();
