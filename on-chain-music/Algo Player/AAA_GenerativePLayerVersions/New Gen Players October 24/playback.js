// playback.js
(()=>{const e=window.globalData||(window.globalData={isPlaying:!1,currentSongIndex:0,songsArray:[],audioBuffers:{},reverseAudioBuffers:{},audioContext:new(window.AudioContext||window.webkitAudioContext),masterGain:null,gainNodes:{},isArtworkCover:!0,isVisualiserCover:!1});e.currentSequence=0;const{audioContext:n}=e,t=.1,o=25;let r=null,a={};const c=new Set,i=new Set;let l=null;function s(e,n){const t=Math.floor(n/60),o=Math.floor(n%60);e.textContent=`Time Left: ${t}:${o.toString().padStart(2,"0")}`}function d(){const{songsArray:i,currentSongIndex:l}=e;if(!i.length)return void console.error("No songs available for playback.");const s=i[l%i.length],u=s.projectSequences||{},b=60/s.bpm/4,k=64*b;e.currentSongIndex%=i.length,a={},c.clear(),console.log(`Starting playback for Song: ${s.id} (${e.currentSongIndex+1}/${i.length}) with ${Object.keys(u).length} sequences.`),console.log(`Song BPM: ${s.bpm}`),window.synth&&"function"==typeof window.synth.updateBPM?(window.synth.updateBPM(s.bpm),console.log(`Synth BPM updated to ${s.bpm} BPM.`)):console.warn("Synth instance not found or updateBPM method unavailable.");let h=0;for(const[e,t]of Object.entries(u))a[e]={nextStepIndex:0,nextStepTime:n.currentTime+h,stepDuration:b,endTime:n.currentTime+h+k,completed:!1,loggedStart:!1},h+=k;e.currentSongId=s.id,GainNodeHelper.createGainNodesForSong(s),GainNodeHelper.prepareNextSong(i[(e.currentSongIndex+1)%i.length]),e.isPlaying=!0,r=setInterval((()=>function(o){const r=n.currentTime;let c=!0;for(const[n,i]of Object.entries(o.projectSequences||{})){const l=a[n];if(l&&!l.completed)if(r>=l.endTime)l.completed=!0,console.log(`Sequence ${n} has completed.`);else for(c=!1;l.nextStepTime<r+t&&e.isPlaying;){const{nextStepIndex:t,nextStepTime:r,stepDuration:a}=l;0!==t||l.loggedStart||(console.log(`Starting Sequence ${n} at step ${t}.`),l.loggedStart=!0);for(const[e,n]of Object.entries(i)){const a=parseInt(e.slice(2),10),c=o.channels[a];if(!c){console.warn(`Channel index ${a} not found in song ${o.id}.`);continue}const i=n.steps?.find((e=>"number"==typeof e?e===t:e.index===t));if(void 0!==i){const e="object"==typeof i&&i.reverse;S(o,c,r,e)}}if(l.nextStepIndex++,l.nextStepIndex>=64){l.completed=!0,console.log(`Sequence ${n} has completed all steps.`);break}l.nextStepTime+=a;const c=parseInt(n.replace("Sequence",""),10);c>e.currentSequence&&(e.currentSequence=c,console.log(`Current Sequence updated to: ${e.currentSequence}`),p(),e.currentSeed=(void 0!==e.currentSeed?BigInt(e.currentSeed):1n)+1n,console.log(`Seed progressed to: ${e.currentSeed}`))}}c&&(console.log("All sequences have completed."),function(){if(!e.isPlaying)return;e.currentSongIndex=(e.currentSongIndex+1)%e.songsArray.length,setTimeout((()=>{e.isPlaying&&g({preserveIsPlaying:!0,callback:d})}),200)}());!function(e,n){const{muteSchedule:t}=e;if(!t||!Array.isArray(t))return;t.filter((e=>e.sequence===n)).forEach((n=>{const{action:t,channels:o}=n;o.forEach((n=>{const o=e.channels.find((e=>e.id===n));o&&("mute"===t?m(o):"unmute"===t&&y(o))}))}))}(o,e.currentSequence)}(s)),o),console.log("Sequences scheduled and playback started."),document.dispatchEvent(new CustomEvent("playbackStarted",{detail:{success:!0}})),f(s)}function u(){e.isPlaying?(g(),console.log("Playback stopped."),document.dispatchEvent(new CustomEvent("playbackStopped",{detail:{success:!0}})),b(),l&&(clearInterval(l),l=null)):console.log("Playback is not in progress.")}function g(n={}){clearInterval(r),n.preserveIsPlaying||(e.isPlaying=!1),a={},c.clear(),i.forEach((e=>{try{e.stop(),e.disconnect()}catch(e){console.error("Error stopping/disconnecting an audio source:",e)}})),i.clear(),e.currentSongId&&(GainNodeHelper.cleanupGainNodesForSong(e.currentSongId),e.currentSongId=null),l&&(clearInterval(l),l=null),n.callback&&n.callback()}function p(){const n=document.getElementById("nowPlayingContainer");if(!n)return;const t=n.querySelector(".current-sequence");t&&(t.textContent=`Current Sequence: ${e.currentSequence||0}`)}function m(t){if(!t.metadata.isMuted){t.metadata.isMuted=!0;const o=e.gainNodes[song.id]?.[t.id];o&&(o.gain.cancelScheduledValues(n.currentTime),o.gain.setValueAtTime(o.gain.value,n.currentTime),o.gain.linearRampToValueAtTime(0,n.currentTime+.5),console.log(`Channel ${t.id} muted with fade-out.`))}}function y(t){if(t.metadata.isMuted){t.metadata.isMuted=!1;const o=e.gainNodes[song.id]?.[t.id];o&&(o.gain.cancelScheduledValues(n.currentTime),o.gain.setValueAtTime(0,n.currentTime),o.gain.linearRampToValueAtTime(1,n.currentTime+.5),console.log(`Channel ${t.id} unmuted with fade-in.`))}}e.masterGain||(e.masterGain=n.createGain(),e.masterGain.connect(n.destination)),e.togglePlayback=()=>e.isPlaying?u():d(),e.startPlayback=d,e.stopPlayback=u,e.resetPlayback=()=>g({callback:d});const S=(t,o,r,a)=>{const l=`${t.id}_${o.id}_${a?"reverse":"normal"}`,s=a?e.reverseAudioBuffers[t.id]?.[o.id]:e.audioBuffers[t.id]?.[o.id];if(!s)return void(c.has(l)||(c.add(l),console.warn(`Audio buffer missing for Song: ${t.id}, Channel: ${o.id}${a?" (Reverse)":""}`)));const d=n.createBufferSource();d.buffer=s,d.playbackRate.value=o.metadata.playbackSpeed||1;const u=e.gainNodes?.[t.id]?.[o.id]||e.masterGain;d.connect(u),d.start(r),i.add(d),d.onended=()=>i.delete(d)};e.initializePlaybackEngine=()=>{e.songsArray.length?(console.log("Playback Engine Initialization Complete."),console.log("Playback is ready. Click the artwork to start.")):console.error("No songs available for playback.")};const f=n=>{const t=document.getElementById("nowPlayingContainer");if(!t)return void console.warn("Now Playing Container not found.");const{projectName:o,artistName:r}=function(e){return{projectName:e.projectName||e.id||"Unknown Project",artistName:e.artist||"Unknown Artist"}}(n);t.querySelector(".songTitle").textContent=o,t.querySelector(".artistName").textContent=r,t.querySelector(".songBPM").textContent=`BPM: ${n.bpm}`,t.querySelector(".totalSequences").textContent=`Sequences: ${Object.keys(n.projectSequences).length}`,function(n){l&&clearInterval(l);const t=document.getElementById("nowPlayingContainer");if(!t)return;const o=t.querySelector(".timeLeft");if(!o)return;let r=60/n.bpm/4*64*Object.keys(n.projectSequences).length;s(o,r),l=setInterval((()=>{e.isPlaying?(r-=1,r<=0&&(r=0,clearInterval(l)),s(o,r)):clearInterval(l)}),1e3)}(n)},b=()=>{const e=document.getElementById("nowPlayingContainer");e?(e.querySelector(".songTitle").textContent="No song playing",e.querySelector(".artistName").textContent="",e.querySelector(".songBPM").textContent="BPM: N/A",e.querySelector(".totalSequences").textContent="Sequences: N/A",e.querySelector(".timeLeft").textContent="Time Left: N/A"):console.warn("Now Playing Container not found.")};document.addEventListener("initialAudioBuffersReady",(n=>{n.detail.success&&(e.initializePlaybackEngine(),console.log("Initial audio buffers are ready."))})),["playbackStarted","playbackStopped"].forEach((e=>{document.addEventListener(e,(n=>{n.detail.success&&console.log(`Playback has been successfully ${"playbackStarted"===e?"started":"stopped"}.`)}))})),document.addEventListener("DOMContentLoaded",(()=>{const n=document.getElementById("artworkCover"),t=document.getElementById("artworkImage"),o=document.getElementById("loadingSpinner");e.isArtworkCover&&artworkUrl.length?(t.src=artworkUrl[0],n.classList.remove("hidden"),o.style.display="none",t.addEventListener("click",e.togglePlayback),console.log("Artwork cover is set up for playback toggle.")):console.warn("Artwork cover is not enabled or no artwork URL provided.")})),Object.keys(e.audioBuffers).length&&e.initializePlaybackEngine()})();
