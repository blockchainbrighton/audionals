// effects.js
window.EffectsModule=window.EffectsModule||{},window.EffectsModule.effectsConfig={pitchShift:{enabled:!0,defaultProbability:1,shifts:[.25,.5,1,2,4]},harmonize:{enabled:!1,defaultProbability:.01,intervals:[.3,.5],maxHarmonyChannels:1},delay:{enabled:!0,defaultProbability:1,noteValue:"sixteenth",maxDelayRepeats:16},reverse:{enabled:!0,defaultProbability:1},pan:{enabled:!0,defaultProbability:1,positions:[-1,1]},reverb:{enabled:!0,defaultProbability:1,decayTimeRange:[2,7],mixRange:[.3,.9]},filter:{enabled:!0,defaultProbability:.7,types:["lowpass","highpass","bandpass"],frequencyRange:[300,8e3],QRange:[1,10]},tremolo:{enabled:!0,defaultProbability:.6,rateRange:[4,12],depthRange:[.6,1]},distortion:{enabled:!0,defaultProbability:.5,amountRange:[1,15]},bitcrusher:{enabled:!0,defaultProbability:.3,bitDepthRange:[2,6],sampleRateRange:[8e3,22050]},chorus:{enabled:!0,defaultProbability:.5,rateRange:[.1,5],depthRange:[.1,1],feedbackRange:[0,.5],mixRange:[0,1]},leslie:{enabled:!0,defaultProbability:.3,speedRange:[.5,1.5],depthRange:[.5,1],mixRange:[0,1]},delayBpmLinked:{enabled:!0,defaultProbability:.4,delayTimes:["quarter","eighth","sixteenth"],feedbackRange:[.3,.7],mixRange:[0,1]}},window.EffectsModule.getEffectParams=function(e,a,n,t){const i=this.effectsConfig[e];if(!i||!i.enabled)return null;if(t()<i.defaultProbability){const a={};switch(e){case"pitchShift":a.shifts=i.shifts;break;case"harmonize":a.intervals=i.intervals,a.maxHarmonyChannels=i.maxHarmonyChannels;break;case"delay":a.noteValue=i.noteValue,a.maxDelayRepeats=i.maxDelayRepeats;break;case"chorus":a.rate=t()*(i.rateRange[1]-i.rateRange[0])+i.rateRange[0],a.depth=t()*(i.depthRange[1]-i.depthRange[0])+i.depthRange[0],a.feedback=t()*(i.feedbackRange[1]-i.feedbackRange[0])+i.feedbackRange[0],a.mix=t()*(i.mixRange[1]-i.mixRange[0])+i.mixRange[0];break;case"leslie":a.speed=t()*(i.speedRange[1]-i.speedRange[0])+i.speedRange[0],a.depth=t()*(i.depthRange[1]-i.depthRange[0])+i.depthRange[0],a.mix=t()*(i.mixRange[1]-i.mixRange[0])+i.mixRange[0];break;case"delayBpmLinked":a.delayTime=i.delayTimes[Math.floor(t()*i.delayTimes.length)],a.feedback=t()*(i.feedbackRange[1]-i.feedbackRange[0])+i.feedbackRange[0],a.mix=t()*(i.mixRange[1]-i.mixRange[0])+i.mixRange[0]}return{...i,...a}}return null},document.dispatchEvent(new Event("effectsLoaded"));
