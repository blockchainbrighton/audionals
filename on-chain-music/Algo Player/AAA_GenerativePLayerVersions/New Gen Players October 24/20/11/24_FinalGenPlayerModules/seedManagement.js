// seedManagement.js
!function(){window.globalData=window.globalData||{seedList:[],currentSeed:"",songsArray:[],currentSongIndex:0,isPlaying:!1,togglePlayback:function(){this.isPlaying=!this.isPlaying,console.log(`Playback is now ${this.isPlaying?"playing":"paused"}.`)}},window.globalData.previousSeeds=window.globalData.previousSeeds||[],window.globalData.favouriteSeedsList=window.globalData.favouriteSeedsList||[];const e=e=>console.log(`[${(new Date).toISOString()}] ${e}`);function t(){let e="";for(let t=0;t<16;t++)e+=Math.floor(10*Math.random());return e}function o(e){return/^\d{16}$/.test(e)}function n(e,t){const o=[60,120,140,160,180,240],n=function(e){let t=0x10000000000000n,o=6364136223846793005n,n=1n,a=BigInt(e)||0n;return function(){return a=(o*a+n)%t,Number(a)/Number(t)}}(e+t);return o[Math.floor(n()*o.length)]}function a(){const e=document.getElementById("previous-seeds-container");if(!e)return void console.warn("Previous seeds container not found.");const t=e.querySelector("#previous-seeds-list");t?t.innerHTML=window.globalData.previousSeeds.length?window.globalData.previousSeeds.map((e=>`\n                        <li>\n                            <span class="seed-text">${e}</span>\n                            <div>\n                                <button class="copy-button" onclick="copyToClipboard('${e}')" aria-label="Copy seed ${e}">Copy</button>\n                                <button class="clear-button" onclick="removeSeedFromPrevious('${e}')" aria-label="Remove seed ${e}">Clear</button>\n                            </div>\n                        </li>\n                    `)).join(""):"<li>No previous seeds.</li>":console.warn("Previous seeds list not found.")}function i(){const e=document.getElementById("favourites-seeds-container");if(!e)return void console.warn("Favourites seeds container not found.");const t=e.querySelector("#favourites-seeds-list");t?t.innerHTML=window.globalData.favouriteSeedsList.length?window.globalData.favouriteSeedsList.map((e=>`\n                        <li>\n                            <span class="seed-text">${e}</span>\n                            <div>\n                                <button class="copy-button" onclick="copyToClipboard('${e}')" aria-label="Copy seed ${e}">Copy</button>\n                                <button class="clear-button" onclick="removeSeedFromFavourites('${e}')" aria-label="Remove seed ${e}">Clear</button>\n                            </div>\n                        </li>\n                    `)).join(""):"<li>No favourite seeds.</li>":console.warn("Favourites seeds list not found.")}function s(e){const t=e.currentTarget.id,o="previous-seeds-button"===t?"previous-seeds-list":"favourites-seeds-button"===t?"favourites-seeds-list":null;if(!o)return;const n=document.getElementById(o),a=n.classList.contains("show");document.querySelectorAll(".dropdown-content").forEach((e=>e.classList.remove("show"))),document.querySelectorAll(".dropdown-button").forEach((e=>e.setAttribute("aria-expanded","false"))),a?(n.classList.remove("show"),e.currentTarget.setAttribute("aria-expanded","false")):(n.classList.add("show"),e.currentTarget.setAttribute("aria-expanded","true"))}function r(e){e.target.matches(".dropdown-button")||(document.querySelectorAll(".dropdown-content").forEach((e=>e.classList.remove("show"))),document.querySelectorAll(".dropdown-button").forEach((e=>e.setAttribute("aria-expanded","false"))))}!function(){const a=new URLSearchParams(window.location.search);let i=[];if(a.has("seed"))i=a.get("seed").split(/[\s,]+/).map((e=>e.trim())).filter((e=>""!==e)),i=i.map((n=>o(n)?n.padStart(16,"0"):(e(`Invalid seed provided: "${n}". Generating a new seed.`),t()))),e(`Using user-provided seed(s): ${i.join(", ")}`),a.delete("seed"),history.replaceState(null,"",`${window.location.pathname}?${a.toString()}`);else{const o=t();i=function(e,t){const o=[e];let n=BigInt(e);for(let e=1;e<t;e++)n+=1n,o.push(n.toString().padStart(16,"0"));return o}(o,100),e(`No user-provided seeds. Generated random seed "${o}" and created 100 sequential seeds.`)}window.globalData.seedList=i,window.globalData.currentSeed=i[0],window.globalData.songsArray=i.map(((e,t)=>({id:"The Infinite Ordinal",projectName:"The Infinite Ordinal",artist:"Unknown Artist",bpm:n(e,t),channels:[],projectSequences:{},seed:e}))),e(`Initialized seedList with ${window.globalData.seedList.length} seeds.`)}(),window.togglePanel=function(e){const t=document.getElementById(e);if(t){t.classList.toggle("hidden");const o=t.classList.contains("hidden");t.setAttribute("aria-hidden",o),o||"seed-management-panel"!==e||(a(),i())}else console.error(`${e.replace(/-/g," ")} not found.`)},window.copyToClipboard=function(e){navigator.clipboard.writeText(e).then((()=>{alert(`Seed copied to clipboard: ${e}`)})).catch((e=>{console.error("Could not copy text:",e)}))},window.clearPreviousSeeds=function(){confirm("Are you sure you want to clear all previous seeds?")&&(window.globalData.previousSeeds=[],a(),e("All previous seeds have been cleared."),alert("Previous seeds have been cleared."))},window.clearFavouritesSeeds=function(){confirm("Are you sure you want to clear all favorite seeds?")&&(window.globalData.favouriteSeedsList=[],i(),e("All favorite seeds have been cleared."),alert("Favorites seeds have been cleared."))},window.loadSeedsFromInput=function(){const e=document.getElementById("seed-input");if(!e)return void alert("Seed input field not found.");const t=e.value.trim().split(/[\s,]+/).map((e=>e.trim())).filter((e=>""!==e));if(0===t.length)return void alert("Please enter at least one seed.");const o=t.map((e=>{if(!/^\d+$/.test(e))throw alert(`Invalid seed format: "${e}". Seeds must contain only numeric characters.`),new Error(`Invalid seed: "${e}"`);return e.padStart(16,"0")})),n=new URLSearchParams(window.location.search);n.set("seed",o.join(","));const a=`${window.location.pathname}?${n.toString()}`;console.log(`Redirecting to: ${a}`),window.location.href=a},window.displaySeedAndBPM=function(t,o,n){const i=document.getElementById("seed-mgmt-canvas");if(!i)return void console.warn("Seed management canvas not found.");const s=i.getContext("2d");s.clearRect(0,0,i.width,i.height),s.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--seed-bg-color")||"green",s.fillRect(0,0,i.width,i.height/2),s.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--bpm-bg-color")||"orange",s.fillRect(0,i.height/2,i.width,i.height/2),s.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--text-color")||"white",s.font=`${getComputedStyle(document.documentElement).getPropertyValue("--font-size")||"16px"} Arial`,s.textAlign="center",s.textBaseline="middle",s.fillText(`Seed: ${t}`,i.width/2,i.height/4),s.fillText(`BPM: ${o}`,i.width/2,3*i.height/4),window.globalData.previousSeeds.includes(t)||(window.globalData.previousSeeds.push(t),a(),e(`Seed saved: ${t}`));const r=document.querySelector("#nowPlayingContainer .current-seed");r&&(r.textContent=`Seed: ${t}`,e(`Updated current seed display: ${t}`));const d=document.querySelector("#nowPlayingContainer .title");d&&n&&(d.textContent=n,e(`Updated current song title: ${n}`))},window.addCurrentSeedToFavourites=function(){const t=window.globalData.currentSeed;t&&o(t)?window.globalData.favouriteSeedsList.includes(t)?alert("This seed is already in your favourites."):(window.globalData.favouriteSeedsList.push(t),i(),alert("Seed added to favourites successfully!"),e(`Seed added to favourites: ${t}`)):alert("No valid current seed available to add to favourites.")},window.loadSpecificSeed=function(t){if(!o(t))return void alert(`Invalid seed format: "${t}". Seeds must be 16-digit numeric strings.`);window.globalData.seedList=[t],window.globalData.currentSeed=t,window.globalData.songsArray=[{id:"Remix",projectName:"The Infinite Ordinal Remix",artist:"Unknown Artist",bpm:n(t,0),channels:[],projectSequences:{},seed:t}],e(`Loaded seed: ${t}`);const a=new URLSearchParams(window.location.search);a.set("seed",t);const i=`${window.location.pathname}?${a.toString()}`;e(`Redirecting to: ${i}`),window.location.href=i},window.removeSeedFromPrevious=function(t){confirm(`Are you sure you want to remove the seed ${t} from Previous Seeds?`)&&(window.globalData.previousSeeds=window.globalData.previousSeeds.filter((e=>e!==t)),a(),e(`Seed removed from Previous Seeds: ${t}`),alert(`Seed ${t} has been removed from Previous Seeds.`))},window.removeSeedFromFavourites=function(t){confirm(`Are you sure you want to remove the seed ${t} from Favourites?`)&&(window.globalData.favouriteSeedsList=window.globalData.favouriteSeedsList.filter((e=>e!==t)),i(),e(`Seed removed from Favourites: ${t}`),alert(`Seed ${t} has been removed from Favourites.`))},window.copyPreviousSeeds=function(){const t=window.globalData.previousSeeds;if(0===t.length)return void alert("There are no previous seeds to copy.");const o=t.join(", ");navigator.clipboard.writeText(o).then((()=>{alert("Previous seeds copied to clipboard!"),e("Previous seeds copied to clipboard.")})).catch((e=>{console.error("Could not copy previous seeds:",e),alert("Failed to copy previous seeds.")}))},window.copyFavouritesSeeds=function(){const t=window.globalData.favouriteSeedsList;if(0===t.length)return void alert("There are no favourite seeds to copy.");const o=t.join(", ");navigator.clipboard.writeText(o).then((()=>{alert("Favourite seeds copied to clipboard!"),e("Favourite seeds copied to clipboard.")})).catch((e=>{console.error("Could not copy favourite seeds:",e),alert("Failed to copy favourite seeds.")}))},document.addEventListener("DOMContentLoaded",(()=>{if(window.globalData.songsArray.length>0){const e=window.globalData.songsArray[window.globalData.currentSongIndex];displaySeedAndBPM(e.seed,e.bpm,e.projectName)}a(),i();const e=document.getElementById("previous-seeds-button"),t=document.getElementById("favourites-seeds-button");e&&e.addEventListener("click",s),t&&t.addEventListener("click",s),window.addEventListener("click",r);const o=document.getElementById("previous-seeds-list");o&&o.addEventListener("click",(function(e){if(e.target&&e.target.matches("button.seed-item")){const t=e.target.getAttribute("data-seed");t&&(loadSpecificSeed(t),togglePanel("seed-management-panel"))}}));const n=document.getElementById("favourites-seeds-list");n&&n.addEventListener("click",(function(e){if(e.target&&e.target.matches("button.favourite-seed-item")){const t=e.target.getAttribute("data-seed");t&&(loadSpecificSeed(t),togglePanel("seed-management-panel"))}}));const d=document.getElementById("toggle-seed-panel-button");d&&d.addEventListener("mouseover",(()=>{}));const l=document.getElementById("favourites-seeds-container");l&&!l.classList.contains("hidden")&&i()})),window.handlePreviousSong=function(){if(window.globalData.currentSongIndex>0){window.globalData.currentSongIndex--;const e=window.globalData.songsArray[window.globalData.currentSongIndex];displaySeedAndBPM(e.seed,e.bpm,e.projectName)}else alert("This is the first song.")},window.handleNextSong=function(){if(window.globalData.currentSongIndex<window.globalData.songsArray.length-1){window.globalData.currentSongIndex++;const e=window.globalData.songsArray[window.globalData.currentSongIndex];displaySeedAndBPM(e.seed,e.bpm,e.projectName)}else alert("This is the last song.")}}();
